{"remainingRequest":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\sample\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\sample\\index.vue","mtime":1720529385513},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\babel.config.js","mtime":1701483760000},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702824123341},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":1702824125233},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702824123341},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":1702824125775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["day","time","mapGetters","Tooltip","getToken","data","dialogEditVisiblex","MYSQLDRAW","ORACLEDRAW","MYSQLADAPT","ORACLEADAPT","TASKFINAL","TASKEVALATE","TASKUNDO","TASKSTOP","SQLDRAWDELAY","SQLADAPTDELAY","loading","uploadUrl","uploadTaskID","selectRowId","selectTaskId","fileList","curRowId","allTask","culing","outed","finished","newSet","folder","queryParam","pagesize","pagenum","TaskqueryParam","pagination","currentPage","pageSizeOptions","pageSize","total","showSizeChanger","showTotal","concat","Taskpagination","row","dialogVisible","dialogVisiblex","editAffairVisible","newAffair","affairName","affairDesc","newAffairForm","newTask","taskName","taskType","taskLocal","taskStatus","files","dialogTitle","title","titlex","caseSet","total1","searchModel","affairInfo","affairId","setList","taskList","tableCase","like","headers","username","user_id","components","created","getSetList","getTokenInfo","getTaskStatistics","computed","_objectSpread","getResData","getTaskData","methods","_this","token","window","sessionStorage","getItem","$http","get","then","res","catch","error","console","customSort","column","prop","order","sort","a","b","statusOrder","aOrder","bOrder","aTime","Date","parse","CreatedAt","bTime","handleChange","file","handleFileSuccess","response","log","handleFileError","err","beforeUpload","push","handleRemove","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$_this2$$http$g","wrap","_callee$","_context","prev","next","params","page_size","page_num","sent","status","$message","message","stop","getTaskList","ID","_this3","_callee2","_yield$_this3$$http$g","_callee2$","_context2","abrupt","_this4","_callee3","_callee3$","_context3","totalCount","inProgressCount","notStartedCount","expiredCount","extractFileName","fixedPart","fileName","taskPath","substring","length","formateDate","property","format","deleteSet","id","_this5","$confirm","confirmButtonText","cancelButtonText","type","_callee4","_callee4$","_context4","delete","success","t0","info","handleSizeChange","val","handleCurrentChange","handleTaskSizeChange","handleTaskCurrentChange","deleteTask","setid","_this6","_callee6","_callee6$","_context6","_callee5","_callee5$","_context5","searchSet","_this7","_callee7","_yield$_this7$$http$g","_callee7$","_context7","set_name","name","handleEditAffair","_this8","_callee8","_yield$_this8$$http$g","_callee8$","_context8","editSet","_this9","$refs","editAffairRef","validate","_ref3","_callee9","valid","_yield$_this9$$http$p","_callee9$","_context9","put","setName","_x","apply","arguments","jumphandelSql","$router","jumphandelDl","PauseTask","taskid","beginMatch","linenum","_this10","_callee10","_response","_callee10$","_context10","Promise","race","_","reject","setTimeout","Error","post","t1","jumphandelMatch","_this11","_callee11","taskData","resultData","_callee11$","_context11","taskId","$store","getters","JSON","taskResult","dispatch","getCasesById","getCaseList","addCase","handleAdd","path","cases","handleAddTask","dialogTitlex","handleEditTask","affairid","_this12","_callee12","_callee12$","_context12","handleView","handleSelectFolder","fu","document","getElementById","textarea","handleCloseDialog","done","_this13","addSet","_this14","addAffairRef","_ref4","_callee13","_yield$_this14$$http$","_callee13$","_context13","setDesc","resetFields","_x2","addTask","_this15","_callee15","_callee15$","_context15","newTaskRef","_ref5","_callee14","_yield$_this15$$http$","formData","result","_callee14$","_context14","SetId","TaskName","TaskPath","TaskType","TaskStatus","$nextTick","FormData","append","forEach","raw","fetch","method","body","json","_x3","editTask","_this16","_callee16","_yield$_this16$$http$","_callee16$","_context16","upload","uploadFiles","submit","downloadResult","_this17","_callee17","tableData","htmlContent","_i","_tableData","item","blob","url","link","_callee17$","_context17","Object","values","sqlLength","suggestion","Blob","URL","createObjectURL","createElement","href","download","appendChild","click","removeChild","revokeObjectURL"],"sources":["src/views/sample/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"case-set-management\">\r\n    <div>\r\n      <!-- 搜索栏 -->\r\n      <el-card id=\"search\">\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <el-input v-model=\"searchModel.name\" placeholder=\"任务集名\" clearable></el-input>\r\n            <el-button type=\"primary\" round icon=\"el-icon-search\" @click=\"searchSet\">查询</el-button>\r\n          </el-col>\r\n          <!-- 分页组件 -->\r\n\r\n          <!-- <el-pagination :current-page=\"searchModel.pageNo\" :page-sizes=\"[5, 10, 20, 50]\" :page-size=\"searchModel.pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\" @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\" :small=\"true\" >\r\n            </el-pagination> -->\r\n          <el-col :span=\"10\" align=\"right\">\r\n            <template>\r\n              <div>\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"pagination.currentPage\" :page-sizes=\"pagination.pageSizeOptions\"\r\n                  :page-size=\"pagination.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"pagination.total\">\r\n                </el-pagination>\r\n              </div>\r\n            </template>\r\n          </el-col>\r\n          <el-col :span=\"6\" align=\"right\">\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" circle @click=\"handleAdd(null)\"></el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </el-card>\r\n\r\n      <!-- 任务集表格 -->\r\n      <el-card>\r\n        <!-- <el-table :data=\"setList\" stripe style=\"width: 100%\" :row-style=\"{ cursor: 'pointer' }\" @row-click=\"handleView\"> -->\r\n        <el-table v-loading=\"loading\" element-loading-text=\"任务处理中,请稍等\" :data=\"setList\" stripe style=\"width: 100%\" :row-style=\"{ cursor: 'pointer' }\"\r\n          @expand-change=\"handleView\">\r\n          <el-table-column type=\"expand\" @row-click=\"handleView\">\r\n            <template slot-scope=\"props\">\r\n              <!-- <el-table :data=\"caseSet\" stripe style=\"width: 80%\"> -->\r\n              <el-table :data=\"taskList\" :default-sort=\"{prop: 'CreatedAt', order: 'descending'}\" @sort-change=\"customSort\">\r\n                <el-table-column v-if=\"false\" prop=\"ID\" label=\"任务ID\"> </el-table-column>\r\n                <el-table-column prop=\"taskName\" label=\"任务名称\" width=\"80\"></el-table-column>\r\n                <!-- <el-table-column prop=\"taskPath\" label=\"任务路径\"width=\"85\">\r\n                  <template slot-scope=\"scope\">\r\n                      <tooltip effect=\"dark\" :content=\"scope.row.taskPath\" placement=\"top\">\r\n                      <span>{{ extractFileName(scope.row) }}</span>\r\n                      </tooltip>\r\n                 </template>\r\n                </el-table-column> -->\r\n                <el-table-column prop=\"sqlLength\" label=\"SQL条数\" width=\"60\">\r\n                  <template slot-scope=\"scope\">\r\n                      <div style=\"text-align: center;\">{{ scope.row.sqlLength }}</div>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"taskType\" label=\"任务类型\"></el-table-column>\r\n                <el-table-column prop=\"taskStatus\" label=\"任务状态\" sortable=\"custom\"></el-table-column>\r\n                <el-table-column v-if=\"false\" prop=\"setId\" label=\"业务ID\"> </el-table-column>\r\n                <el-table-column prop=\"CreatedAt\" label=\"创建时间\" :formatter=\"formateDate\" sortable=\"custom\"></el-table-column>\r\n                <el-table-column prop=\"UpdatedAt\" label=\"修改时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column prop=\"startTime\" label=\"开始时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column prop=\"endTime\" label=\"结束时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                  <template slot-scope=\"scope\">\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"开始\" placement=\"top\">\r\n                        <el-button type=\"primary\" class=\"start\" circle size=\"mini\" icon=\"el-icon-video-play\"\r\n                        @click=\"beginMatch(scope.row.ID,scope.row.sqlLength)\"></el-button>\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"暂停\" placement=\"top\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-video-pause\"\r\n                        @click=\"PauseTask(scope.row.ID,scope.row.affairId)\"></el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-edit\"\r\n                          @click=\"handleEditTask(scope.row.ID, scope.row.setId)\"></el-button>\r\n                        <!-- <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-download\"></el-button> -->\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"SQL画像/语法匹配\" placement=\"bottom\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-s-opportunity\"\r\n                          @click=\"jumphandelMatch(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"报告下载\" placement=\"bottom\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-download\"\r\n                          @click=\"downloadResult(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"删除任务\" placement=\"bottom\">\r\n                        <el-button type=\"danger\" circle size=\"mini\" icon=\"el-icon-delete\"\r\n                          @click=\"deleteTask(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n              <!-- 该任务分页栏 -->\r\n              <template>\r\n                <div>\r\n                  <el-pagination @size-change=\"handleTaskSizeChange\" @current-change=\"handleTaskCurrentChange\"\r\n                    :current-page=\"Taskpagination.currentPage\" :page-sizes=\"Taskpagination.pageSizeOptions\"\r\n                    :page-size=\"Taskpagination.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"Taskpagination.total\">\r\n                  </el-pagination>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"false\" prop=\"ID\" label=\"任务集ID\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"setName\" label=\"任务集名称\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"CreatedAt\" label=\"创建时间\" :formatter=\"formateDate\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"UpdatedAt\" label=\"修改时间\" :formatter=\"formateDate\" width=\"200\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"400\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"新建任务\" placement=\"top\">\r\n                <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle\r\n                  @click=\"handleAddTask(scope.row.ID)\"></el-button></el-tooltip>\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑任务集\" placement=\"top\">\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"small\" circle\r\n                  @click=\"handleEditAffair(scope.row.ID)\"></el-button></el-tooltip>\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"删除任务集\" placement=\"top\">\r\n                <el-button type=\"danger\" circle size=\"small\" icon=\"el-icon-delete\" @click=\"deleteSet(scope.row.ID)\">\r\n                </el-button></el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 新增任务集 -->\r\n        <el-dialog :visible.sync=\"dialogVisible\" title=\"新增任务集\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"addAffairRef\" :model=\"newAffair\" label-width=\"120px\">\r\n            <!-- <el-form-item label=\"任务集ID\" prop=\"id\">\r\n              <el-input v-model=\"newSet.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务集名称\" prop=\"affairName\">\r\n              <el-input v-model=\"newAffair.affairName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"任务集描述\" prop=\"affairDesc\">\r\n              <el-input v-model=\"newAffair.affairDesc\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogVisible = false; selectRowId = null; selectTaskId = null\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addSet\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n        <!-- 编辑任务集 -->\r\n        <el-dialog :visible.sync=\"editAffairVisible\" :title=\"title\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"editAffairRef\" :model=\"affairInfo\" label-width=\"120px\">\r\n            <!-- <el-form-item label=\"任务集ID\" prop=\"id\">\r\n              <el-input v-model=\"newSet.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务集名称\" prop=\"setName\">\r\n              <el-input v-model=\"affairInfo.affairName\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editAffairVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editSet\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n        <!-- 添加/编辑任务对话框 -->\r\n        <el-dialog :visible.sync=\"dialogVisiblex\" :title=\"titlex\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"newTaskRef\" :model=\"newTask\" label-width=\"120px\" enctype=\"multipart/form-data\">\r\n            <!-- <el-form-item label=\"任务ID\" prop=\"id\">\r\n              <el-input v-model=\"newCaseForm.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务名称\">\r\n              <el-input v-model=\"newTask.taskName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"任务类型\">\r\n              <el-select v-model=\"newTask.taskType\" placeholder=\"请选择任务类型\">\r\n                <el-option :label=\"MYSQLDRAW\" :value=\"MYSQLDRAW\"></el-option>\r\n                <el-option :label=\"ORACLEDRAW\" :value=\"ORACLEDRAW\"></el-option>\r\n                <el-option :label=\"MYSQLADAPT\" :value=\"MYSQLADAPT\"></el-option>\r\n                <el-option :label=\"ORACLEADAPT\" :value=\"ORACLEADAPT\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"文件位置\">\r\n              <el-upload ref=\"upload\" class=\"upload-demo\" :auto-upload=\"false\" action=\"\" :data=\"{ taskID: uploadTaskID }\"\r\n                :before-upload=\"beforeUpload\"\r\n                :on-success=\"handleFileSuccess\"\r\n                :on-error=\"handleFileError\"\r\n                :on-change=\"handleChange\"\r\n                :on-remove=\"handleRemove\"\r\n                :file-list=\"fileList\"\r\n                :multiple=\"true\"\r\n                drag\r\n                >\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖拽到此处，或<em>点击上传</em></div>\r\n\r\n              </el-upload>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogVisiblex = false; selectRowId = null; selectTaskId = null\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addTask\">确 定</el-button>\r\n          </div>\r\n          </el-dialog>\r\n\r\n        <!-- 编辑任务对话框 -->\r\n        <el-dialog :visible.sync=\"dialogEditVisiblex\" :title=\"titlex\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"newTaskRef\" :model=\"newTask\" label-width=\"120px\" enctype=\"multipart/form-data\">\r\n            <el-form-item label=\"任务名称\">\r\n              <el-input v-model=\"newTask.taskName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"任务类型\">\r\n              <el-select v-model=\"newTask.taskType\" placeholder=\"请选择任务类型\">\r\n                <el-option :label=\"MYSQLDRAW\" :value=\"MYSQLDRAW\"></el-option>\r\n                <el-option :label=\"ORACLEDRAW\" :value=\"ORACLEDRAW\"></el-option>\r\n                <el-option :label=\"MYSQLADAPT\" :value=\"MYSQLADAPT\"></el-option>\r\n                <el-option :label=\"ORACLEADAPT\" :value=\"ORACLEADAPT\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"文件位置\">\r\n              <el-upload ref=\"upload\" class=\"upload-demo\" :auto-upload=\"false\" :action=\"uploadUrl\" :data=\"{ taskID: uploadTaskID }\"\r\n                :on-success=\"handleFileSuccess\"\r\n                :on-error=\"handleFileError\"\r\n                :before-upload=\"beforeUpload\"\r\n                :limit=\"3\"\r\n                drag\r\n                multiple\r\n                >\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">仅支持后缀为.sql的文件，将文件拖拽到此处，或<em>点击上传</em></div>\r\n\r\n              </el-upload>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogEditVisiblex = false; selectRowId = null; selectTaskId = null\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editTask\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n      </el-card>\r\n    </div>\r\n\r\n    <div style=\"margin-top: 30px;\"></div>\r\n    <!-- 任务统计 -->\r\n    <div>\r\n      <h3>任务统计</h3>\r\n      <el-row>\r\n        <el-col :span=\"6\">\r\n        <el-card style=\"height: 120px;background-color: ghostwhite;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"allTask\" title=\"全部任务\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: burlywood;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"culing\" :title=\"TASKEVALATE\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n        </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: powderblue; margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"outed\" :title=\"TASKUNDO\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: mintcream;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"finished\" :title=\"TASKFINAL\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n        </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport day from 'dayjs'\r\nimport { time } from 'echarts';\r\nimport { mapGetters } from 'vuex'\r\nimport { Tooltip } from 'element-ui'\r\nimport { getToken } from '@/utils/auth';\r\n// import Statistic from 'element-ui';\r\n// Vue.use(Statistic)\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogEditVisiblex: false,\r\n      MYSQLDRAW:\"SQL画像 MySQL\",\r\n      ORACLEDRAW:\"SQL画像 Oracle\",\r\n      MYSQLADAPT:\"MySQL适配\",\r\n      ORACLEADAPT:\"Oracle适配\",\r\n      TASKFINAL:\"已完成\",\r\n      TASKEVALATE:\"评估中\",\r\n      TASKUNDO:\"未开始\",\r\n      TASKSTOP:\"已停止\",\r\n      SQLDRAWDELAY:15000,\r\n      SQLADAPTDELAY:15000,\r\n      loading: false,\r\n      uploadUrl: \"http://localhost:8000/api/upload\",\r\n      uploadTaskID: 1,\r\n      selectRowId: null,\r\n      selectTaskId: null,\r\n      fileList: [],\r\n      curRowId: null,\r\n      allTask: 10,\r\n      culing: 5,\r\n      outed: 2,\r\n      finished: 7,\r\n      newSet: {\r\n        folder: \"\"\r\n      },\r\n      queryParam: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      TaskqueryParam: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSizeOptions: [5, 10, 20, 30, 40],\r\n        pageSize: 10,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`,\r\n      },\r\n      Taskpagination: {\r\n        currentPage: 1,\r\n        pageSizeOptions: [5, 10, 20, 30, 40],\r\n        pageSize: 10,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`,\r\n      },\r\n      row: \"\",\r\n      dialogVisible: false,\r\n      dialogVisiblex: false,\r\n      editAffairVisible: false,\r\n\r\n      newAffair: {\r\n        affairName: \"\",\r\n        affairDesc: \"\"\r\n      },\r\n      newAffairForm: {\r\n        affairName: \"\",\r\n      },\r\n      newTask: {\r\n        taskName: \"\",\r\n        taskType: \"\",\r\n        taskLocal: \"\",\r\n        taskStatus: \"未开始\",\r\n        files: [],\r\n      },\r\n      dialogTitle: \"\",\r\n      title: \"\",\r\n      titlex: \"\",\r\n      caseSet: {\r\n\r\n      },\r\n      total: 0,\r\n      total1: 0,\r\n      searchModel: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      affairInfo: {\r\n        affairId: 0,\r\n        affairName: ''\r\n      },\r\n      // 任务集合列表数据\r\n      setList: [],\r\n      taskList: [],\r\n      tableCase: {},\r\n      like: true,\r\n      headers: {\r\n        username: '',\r\n        user_id: 0\r\n      },\r\n\r\n    };\r\n  },\r\n  components: {\r\n    Tooltip,\r\n  },\r\n\r\n  created() {\r\n    this.getSetList()\r\n    // this.getTaskList()\r\n    this.getTokenInfo()\r\n    // this.user_id = window.sessionStorage.getItem('user_id')\r\n    // this.headers = {\r\n    //   username: sessionStorage.getItem('username'),\r\n    //   user_id: sessionStorage.getItem('user_id')\r\n    // }\r\n    this.getTaskStatistics()\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getResData: 'data/getResData',  // 获取全局的 resData\r\n      getTaskData: 'task/getTaskData'  // 获取当前任务的画像数据\r\n    })\r\n  },\r\n  methods: {\r\n    getTokenInfo() {\r\n      const token = window.sessionStorage.getItem('token')\r\n      this.$http.get('parse/token', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, // 将JWT令牌添加到请求头中\r\n          'Content-Type': 'application/json' // 设置请求头为JSON类型\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.headers.username = res.data.username\r\n        this.headers.user_id = res.data.user_id\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error); \r\n      });\r\n    },\r\n    // 任务表格排序\r\n    customSort(column) {\r\n      const prop = column.prop\r\n      const order = column.order\r\n      if (prop === 'taskStatus') {\r\n        this.taskList.sort((a, b) => {\r\n          const statusOrder = {\r\n            '已完成': 1,\r\n            '评估中': 2,\r\n            '未开始': 3,\r\n            '任务出错':4,\r\n          }\r\n          const aOrder = statusOrder[a.taskStatus]\r\n          const bOrder = statusOrder[b.taskStatus]\r\n          if (order === 'descending') {\r\n            return bOrder - aOrder\r\n          } else {\r\n            return aOrder - bOrder\r\n          }\r\n        })\r\n      } else if (prop === 'CreatedAt') {\r\n        this.taskList.sort((a, b) => {\r\n        const aTime = Date.parse(a.CreatedAt)\r\n        const bTime = Date.parse(b.CreatedAt)\r\n        if (order === 'descending') {\r\n          return bTime - aTime\r\n        } else {\r\n          return aTime - bTime\r\n        }\r\n        })\r\n      }\r\n    },\r\n\r\n    handleChange(file, fileList) {\r\n      this.fileList = fileList\r\n    },\r\n\r\n    handleFileSuccess(response, file, fileList) {\r\n      console.log(\"文件上传成功\", response);\r\n      // 可以在这里处理上传成功后的逻辑，例如更新界面等\r\n    },\r\n    handleFileError(err) {\r\n      console.error(\"文件上传失败\", err);\r\n      // 可以在这里处理上传失败后的逻辑，例如提示用户重新上传等\r\n    },\r\n    beforeUpload(file) {\r\n      console.log(\"进入beforeUpload\")\r\n      if (!this.newTask.files) {\r\n        this.newTask.files = [];\r\n      }\r\n    this.newTask.files.push(file);\r\n    console.log(\"准备上传文件\", file);\r\n  \r\n    },\r\n    handleRemove(file, fileList) {\r\n      this.fileList = fileList;\r\n    },\r\n    // 获取任务集列表\r\n    async getSetList() {\r\n      const token = sessionStorage.getItem('token')\r\n      // console.log(\"=====>\", this.headers)\r\n      const { data: res } = await this.$http.get('sets', {\r\n        params: {\r\n          page_size: this.queryParam.pagesize,\r\n          page_num: this.queryParam.pagenum,\r\n        },\r\n        headers: {\r\n            'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }\r\n      })\r\n      // console.log(\"res===>\", res)\r\n      if (res.status !== 200) {\r\n        this.$message.error(res.message)\r\n      }\r\n\r\n      // console.log(res.data)\r\n      this.setList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 获取任务集下的任务列表\r\n    async getTaskList(ID) {\r\n      const { data: res } = await this.$http.get(`task/list/${ID}`, {\r\n        params: { page_size: this.TaskqueryParam.pagesize, page_num: this.TaskqueryParam.pagenum },\r\n      })\r\n      // console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.taskList = res.data\r\n      this.Taskpagination.total = res.total\r\n      // this.pagination.total = res.total\r\n    },\r\n    // 获取任务状态\r\n    async getTaskStatistics() {\r\n      const token = sessionStorage.getItem('token')\r\n      const res = await this.$http.get('task/statistic', {\r\n        headers: {\r\n              'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n          }\r\n      })\r\n      // console.log(\"test\")\r\n      // console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.allTask = res.data.totalCount\r\n      this.culing = res.data.inProgressCount\r\n      this.outed = res.data.notStartedCount\r\n      this.finished = res.data.expiredCount\r\n    },\r\n\r\n    // 只直接显示文件路径中的文件名\r\n    extractFileName(row) {\r\n      const fixedPart = 'D:\\\\GraduationProject\\\\NPU-DatabaseMigration\\\\gin_GraduationProject\\\\web\\\\'\r\n      const fileName = row.taskPath.substring(fixedPart.length)\r\n      return fileName;\r\n    },\r\n\r\n    // 修改日期格式\r\n    formateDate(row, column) {\r\n      let data = row[column.property]\r\n      return data ? day(data).format('YYYY年MM月DD日 HH:mm') : '暂无'\r\n    },\r\n\r\n    // 删除任务集\r\n    deleteSet(id) {\r\n      // console.log(id)\r\n      this.$confirm('提示：请再次确认', '确定要删除该任务集吗？一旦删除，无法恢复', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(async () => {\r\n          try {\r\n            const response = await this.$http.delete(`set/${id}`)\r\n            // console.log(response)\r\n            if (response.status === 200) {\r\n              this.$message.success('删除成功')\r\n              this.getSetList() // 删除成功后刷新用户列表\r\n              this.getTaskStatistics()\r\n              // this.getTaskList()\r\n            } else {\r\n              this.$message.error(response.data.message || '删除失败，请重试')\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('删除失败，请重试')  // ????\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.info('已取消删除')\r\n        });\r\n    },\r\n\r\n    // 更改分页\r\n    handleSizeChange(val) {\r\n      this.pagination.pageSize = val\r\n      // console.log(`每页 ${val} 条, pagesize`, this.pagination.pageSize);\r\n      this.queryParam.pagesize = this.pagination.pageSize\r\n      this.getSetList()\r\n      this.getTaskStatistics()\r\n\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pagination.currentPage = val\r\n      // console.log(`当前页: ${val}`, this.pagination.currentPage);\r\n      this.queryParam.pagenum = this.pagination.currentPage\r\n      this.getSetList()\r\n      this.getTaskStatistics()\r\n    },\r\n    // 更改任务分页\r\n    handleTaskSizeChange(val) {\r\n      this.Taskpagination.pageSize = val\r\n      // console.log(`每页 ${val} 条, pagesize`, this.pagination.pageSize);\r\n      this.TaskqueryParam.pagesize = this.Taskpagination.pageSize\r\n      this.getTaskList(this.curRowId)\r\n      this.getTaskStatistics()\r\n    },\r\n    handleTaskCurrentChange(val) {\r\n      this.Taskpagination.currentPage = val\r\n      // console.log(`当前页: ${val}`, this.pagination.currentPage);\r\n      this.TaskqueryParam.pagenum = this.Taskpagination.currentPage\r\n      this.getTaskList(this.curRowId)\r\n      this.getTaskStatistics()\r\n    },\r\n    //删除任务\r\n    async deleteTask(id,setid) {\r\n      const res =await this.$http.get(`task/info/${id}`)\r\n      // if (res.data.taskStatus==this.TASKFINAL|| res.data.taskStatus==this.TASKSTOP){\r\n      if (res.data.taskStatus !== this.TASKEVALATE) {\r\n\r\n        // console.log(id)\r\n        this.$confirm('提示：请再次确认', '确定要删除该任务吗？一旦删除，无法恢复', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning',\r\n        })\r\n          .then(async () => {\r\n            try {\r\n              const response = await this.$http.delete(`task/${id}`)\r\n              // console.log(response)\r\n              if (response.status === 200) {\r\n                this.$message.success('删除成功')\r\n                this.getTaskList(setid) // 删除成功后刷新任务列表\r\n                this.getTaskStatistics()\r\n                // this.getTaskList()\r\n              } else {\r\n                this.$message.error(response.data.message || '删除失败，请重试')\r\n              }\r\n            } catch (error) {\r\n              this.$message.error('删除失败，请重试')\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.$message.info('已取消删除')\r\n          });\r\n          \r\n      }else{\r\n        return this.$message.error('任务正在进行，不可删除')\r\n      }\r\n      \r\n    },\r\n\r\n    // 搜索任务集\r\n    async searchSet() {\r\n      const token = sessionStorage.getItem('token')\r\n      // console.log(\"进入searchaffair函数\")\r\n      this.searchModel.pagenum = 1\r\n      this.pagination.currentPage = 1\r\n      this.searchModel.pagesize = this.pagination.pageSize\r\n      const { data: res } = await this.$http.get('set/search', {\r\n        params: {\r\n          page_size: this.searchModel.pagesize,\r\n          page_num: this.searchModel.pagenum,\r\n          set_name: this.searchModel.name,\r\n          // id: sessionStorage.getItem('user_id')\r\n        },\r\n        headers: {\r\n             'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }\r\n      })\r\n\r\n      // console.log(\"aaaa已经得到后端返回的数据：\", res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.setList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 编辑任务集合\r\n    async handleEditAffair(id) {\r\n      this.editAffairVisible = true\r\n      const { data: res } = await this.$http.get(`set/${id}`)\r\n      this.affairInfo = res.data\r\n      this.affairInfo.id = id\r\n    },\r\n    editSet() {\r\n      this.$refs.editAffairRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.put(`set/${this.affairInfo.id}`, {\r\n          setName: this.affairInfo.affairName\r\n        })\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.editAffairVisible = false\r\n        this.$message.success('更新任务集信息成功')\r\n        this.getSetList()\r\n      })\r\n    },\r\n\r\n    jumphandelSql() {\r\n      this.$router.push('/test/result')\r\n    },\r\n    jumphandelDl() {\r\n      this.$router.push('/test/reportdl')\r\n    },\r\n    PauseTask(taskid,setid){\r\n      const res = this.$http.get(`task/pause/${taskid}`)\r\n      this.getSetList()\r\n      this.getTaskList(setid)\r\n      this.getTaskStatistics()\r\n    },\r\n    async beginMatch(id,linenum) {\r\n      this.loading = true\r\n      const res = await this.$http.get(`task/info/${id}`)\r\n      console.log(res.data)\r\n      console.log(\"任务类型为:\", res.data.taskType)\r\n      if (res.data.taskType === this.ORACLEDRAW||res.data.taskType === this.MYSQLDRAW) {\r\n        try {\r\n           const response = await Promise.race([\r\n            // this.$http.get(`sql/draw/${id}`),\r\n            this.$http.get(`sql/addtask/${id}`),\r\n            new Promise((_, reject) => setTimeout(() => reject(new Error('请求超时')), 15000*linenum)) // 设置6*linenum秒超时\r\n           ]);\r\n           if (response.status === 200) {\r\n             this.loading = false\r\n           }\r\n           this.getSetList()\r\n           this.getTaskList()\r\n           this.getTaskStatistics()\r\n           console.log(\"get task:\",response)\r\n        } catch (error) {\r\n          console.error(\"获取sql画像分析结果失败:\", error)\r\n          this.$http.post(`sql/editstatus/${id}`)\r\n        }\r\n      }\r\n      else{\r\n        try{\r\n          console.log(\"time\",)\r\n          const response = await Promise.race([\r\n            // this.$http.get(`sql/adapt/${id}`),\r\n            this.$http.get(`sql/addtask/${id}`),\r\n            new Promise((_, reject) => setTimeout(() => reject(new Error('请求超时')), 15000*linenum)) // 设置10秒超时\r\n          ]);\r\n          console.log(\"Oracle适配的响应\",response)\r\n          if (response.status === 200) {\r\n             this.loading = false\r\n           }\r\n           this.getSetList()\r\n           this.getTaskList()\r\n           this.getTaskStatistics()\r\n        }catch (error) {\r\n          this.$message.error(error)\r\n          console.error(\"获取sql适配分析结果失败:\", error)\r\n          this.$http.post(`sql/editstatus/${id}`)\r\n        }\r\n        \r\n      }\r\n    },\r\n\r\n    async jumphandelMatch(id) {\r\n      const res = await this.$http.get(`task/info/${id}`)\r\n      console.log(\"任务状态为：\", res.data)\r\n      // const taskData = this.$store.getters['task/getTaskData'](id)\r\n      // this.$router.push('/test/match')\r\n      if(res.data.taskType==this.ORACLEDRAW||res.data.taskType==this.MYSQLDRAW){\r\n          if (res.data.taskStatus === this.TASKFINAL) {//页面名称修改\r\n            this.$router.push({name: 'result', params: {taskId: id,taskType:res.data.taskType}})\r\n          } else if (res.data.taskStatus === '未开始') {\r\n            return this.$message.error('任务未开始，不可跳转查看结果')\r\n          }\r\n      }else{\r\n          if (res.data.taskStatus === this.TASKFINAL) {//页面名称为适配的结果修改\r\n            this.$router.push({name: 'match', params: {taskId: id}})\r\n          } else if (res.data.taskStatus === '未开始') {\r\n            return this.$message.error('任务未开始，不可跳转查看结果')\r\n          }\r\n      }\r\n\r\n      // 获取当前任务的任务数据\r\n      const taskData = this.$store.getters['task/getTaskData'](id)\r\n      console.log(\"test\",taskData)\r\n      // if (!taskData) {\r\n      if (1) {\r\n        const response = await this.$http.get(`task/result/${id}`)\r\n        const resultData = JSON.parse(response.data.taskResult)\r\n        await this.$store.dispatch('task/setTaskData', { taskId: id, data: resultData})\r\n      }\r\n    },\r\n    // newTask() {\r\n    //   this.$router.push(\"/test/task\");\r\n    // },\r\n    // openFile() {\r\n    //   this.$refs.folderInput.click();\r\n    // },\r\n    // changeFile(e) {\r\n    //   // const folderPath = e.target.files[0].path; // 获取选择的文件夹路径\r\n    //   const file = e.target.files[0]\r\n    //   console.log(\"拿到的文件为：\", file)\r\n    //   this.newTask.taskLocal = file\r\n    //   // this.newSet.folder = folderPath; // 将路径绑定到数据对象中的属性\r\n    // },\r\n    getCasesById(id) {\r\n      this.getCaseList(id);\r\n    },\r\n    addCase() {\r\n      this.dialogTitle = \"添加任务\";\r\n    },\r\n    handleAdd() {\r\n      this.dialogTitle = \"添加业务合\";\r\n      this.caseSet = {\r\n        id: \"\",\r\n        name: \"\",\r\n        path: \"\",\r\n        cases: [],\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    handleAddTask(id) {\r\n      this.dialogTitlex = \"添加任务\";\r\n      this.dialogVisiblex = true;\r\n      this.selectRowId = id;\r\n    },\r\n    async handleEditTask(id, affairid) {\r\n      const res =await this.$http.get(`task/info/${id}`)\r\n      if (res.data.taskStatus==this.TASKFINAL||res.data.taskStatus==this.TASKSTOP){\r\n        this.title = \"修改任务\";\r\n        this.dialogEditVisiblex = true;\r\n        this.selectRowId = affairid;\r\n        this.selectTaskId = id\r\n      }else if (res.data.taskStatus==this.TASKEVALATE){\r\n        return this.$message.error('任务正在进行，不可编辑')\r\n      }\r\n    },\r\n\r\n    // 业务合表格行点击事件处理函数\r\n    handleView(row) {\r\n      // console.log(\"检测执行handleview\")\r\n      // console.log(row.ID)\r\n      this.curRowId = row.ID\r\n      this.getTaskList(row.ID)\r\n      this.getTaskStatistics()\r\n    },\r\n    // 选择文件夹按钮点击事件处理函数\r\n    handleSelectFolder() {\r\n      const fu = document.getElementById(\"open\");\r\n      if (fu == null) return;\r\n      this.textarea = fu.files[0].name;\r\n      // console.log(fu.files[0].name);\r\n    },\r\n\r\n    // 关闭添加/编辑业务合对话框前的钩子函数\r\n    handleCloseDialog(done) {\r\n      this.$confirm(\"确认关闭？\")\r\n        .then(() => {\r\n          this.selectRowId = null\r\n          this.selectTaskId = null\r\n          done();\r\n        })\r\n        .catch(() => { });\r\n    },\r\n\r\n    // 确定添加/编辑任务集合对话框按钮点击事件处理函数\r\n    addSet() {\r\n      this.$refs.addAffairRef.validate(async (valid) => {\r\n        const token = sessionStorage.getItem('token')\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.post('set/add', {\r\n          setName: this.newAffair.affairName,\r\n          setDesc: this.newAffair.affairDesc,\r\n          // userId: parseInt(sessionStorage.getItem('user_id'), 10)\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }})\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.$refs.addAffairRef.resetFields()\r\n        this.dialogVisible = false\r\n        this.$message.success('添加成功')\r\n        this.getSetList()\r\n        this.getTaskStatistics()\r\n      })\r\n    },\r\n\r\n    //添加任务\r\n    // addTask() {\r\n    //   // this.$refs.upload.submit();\r\n    //   this.$refs.newTaskRef.validate(async (valid) => {\r\n    //     if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n    //     if (this.selectTaskId == null) {\r\n    //       const { data: res } = await this.$http.post('task/add', {\r\n    //         SetId: this.selectRowId,\r\n    //         TaskName: this.newTask.taskName,\r\n    //         TaskPath: this.newTask.taskLocal,\r\n    //         TaskType: this.newTask.taskType,\r\n    //         TaskStatus: this.newTask.taskStatus,\r\n    //       })\r\n    //     if (res.status === 200) {\r\n    //       this.uploadTaskID = res.data.ID\r\n    //       console.log(\"上传任务ID为：\", this.uploadTaskID)\r\n    //       await this.$nextTick()\r\n    //       this.$refs.upload.submit()\r\n    //       this.$message.success('添加成功')\r\n    //     } else {\r\n    //       this.$message.error(res.message)\r\n    //     }\r\n          \r\n    //       this.$refs.newTaskRef.resetFields();\r\n    //       this.dialogVisiblex = false\r\n    //       // console.log(this.selectRowId)\r\n    //       this.getTaskList(this.selectRowId)\r\n    //       this.getTaskStatistics()\r\n    //     }\r\n    //     // else {\r\n    //     //   const id = this.selectTaskId\r\n    //     //   this.selectTaskId = null\r\n    //     //   const { data: res } = await this.$http.put(`task/${id}`, {\r\n    //     //     SetId: this.selectRowId,\r\n    //     //     TaskName: this.newTask.taskName,\r\n    //     //     // TaskPath: this.newTask.taskLocal,\r\n    //     //     TaskType: this.newTask.taskType,\r\n    //     //     TaskStatus: this.newTask.taskStatus,\r\n    //     //   })\r\n\r\n    //     //   console.log(\"修改任务\", this.$refs.upload.uploadFiles.length)\r\n    //     //   if (this.$refs.upload.uploadFiles.length === 1) {\r\n    //     //     this.uploadTaskID = id\r\n    //     //     console.log(\"bfdjsj上传任务ID为：\", this.uploadTaskID)\r\n    //     //     await this.$nextTick()\r\n    //     //     this.$refs.upload.submit()\r\n    //     //   }\r\n    //     //   // if (res.status != 200) return this.$message.error(res.message)\r\n    //     //   // this.$nextTick(() => {\r\n    //     //   //   if (this.$refs.newTaskRef) {\r\n\r\n    //     //   //   }\r\n    //     //   // });\r\n    //     //   this.$refs.newTaskRef.resetFields();\r\n    //     //   this.dialogVisiblex = false\r\n    //     //   this.$message.success('修改成功')\r\n    //     //   // console.log(this.selectRowId)\r\n    //     //   this.getTaskList(this.selectRowId)\r\n    //     //   this.getTaskStatistics()\r\n    //     //   this.selectRowId = null\r\n    //     // }\r\n    //   })\r\n    // },\r\n\r\n    async addTask() {\r\n      this.$refs.newTaskRef.validate(async (valid) => {\r\n      if (!valid) return this.$message.error('参数不符合要求，请重新输入');\r\n\r\n    // 检查是新任务还是已有任务\r\n    if (this.selectTaskId == null) {\r\n      const { data: res } = await this.$http.post('task/add', {\r\n        SetId: this.selectRowId,\r\n        TaskName: this.newTask.taskName,\r\n        TaskPath: this.newTask.taskLocal,\r\n        TaskType: this.newTask.taskType,\r\n        TaskStatus: this.newTask.taskStatus\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        this.uploadTaskID = res.data.ID;\r\n        console.log(\"上传任务ID为：\", this.uploadTaskID);\r\n        await this.$nextTick();\r\n\r\n        const formData = new FormData();\r\n        formData.append('taskID', this.uploadTaskID);\r\n\r\n        \r\n        console.log(\"看看有没有文件\",this.fileList)\r\n        // 将每个文件附加到 formData\r\n        this.fileList.forEach((file) => {\r\n          formData.append('files', file.raw);\r\n        });\r\n\r\n        try {\r\n          const response = await fetch(this.uploadUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n          });\r\n          const result = await response.json();\r\n          console.log(result);\r\n\r\n          if (result.status === 200 || result.status === 3006) {\r\n            this.$message.success(result.message);\r\n          } else {\r\n            this.$message.error(result.message);\r\n          }\r\n        \r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          this.$message.error('上传失败');\r\n        }\r\n\r\n        this.taskList = []\r\n        this.$refs.newTaskRef.resetFields();\r\n        this.dialogVisiblex = false;\r\n        this.getTaskList(this.selectRowId);\r\n        this.getTaskStatistics();\r\n      } else {\r\n        this.$message.error(res.message);\r\n      }\r\n    }\r\n  });\r\n},\r\n\r\n\r\n    async editTask(){\r\n      const id = this.selectTaskId\r\n      this.selectTaskId = null\r\n      const { data: res } = await this.$http.put(`task/${id}`, {\r\n      SetId: this.selectRowId,\r\n      TaskName: this.newTask.taskName,\r\n      // TaskPath: this.newTask.taskLocal,\r\n      TaskType: this.newTask.taskType,\r\n      TaskStatus: this.newTask.taskStatus,\r\n      })\r\n\r\n      console.log(\"修改任务\", this.$refs.upload.uploadFiles.length)\r\n      if (this.$refs.upload.uploadFiles.length === 1) {\r\n          this.uploadTaskID = id\r\n          console.log(\"bfdjsj上传任务ID为：\", this.uploadTaskID)\r\n          await this.$nextTick()\r\n          this.$refs.upload.submit()\r\n        }\r\n        \r\n        this.$refs.newTaskRef.resetFields();\r\n        this.dialogEditVisiblex = false\r\n        this.$message.success('修改成功')\r\n          // console.log(this.selectRowId)\r\n        this.getTaskList(this.selectRowId)\r\n        this.getTaskStatistics()\r\n        this.selectRowId = null\r\n    },\r\n    \r\n    async downloadResult(id) {\r\n      // window.location.href = `http://localhost:8000/api/download/${id}`\r\n     // 调用接口获取报告数据\r\n     const res = await this.$http.get(`/download/${id}`);\r\n\r\n    if (res.data.status !== 200) {\r\n      this.$message.error(res.data.message)\r\n    } else {\r\n    const taskResult = JSON.parse(res.data.taskResult)\r\n    \r\n    const tableData = Object.values(taskResult)\r\n    console.log(\"tableData\", tableData)\r\n      // 使用获取到的数据动态生成 HTML 内容\r\n    let htmlContent = `\r\n    <html>\r\n      <head>\r\n        <title>${res.data.taskName}</title>\r\n        <style>\r\n        body {\r\n    font-family: Arial, sans-serif;\r\n    margin: 0;\r\n    padding: 20px;\r\n    background-color: #f8f8f8;\r\n  }\r\n  h1, h2 {\r\n    color: #333;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    margin-top: 20px;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:hover {\r\n    background-color: #ddd;\r\n  }\r\n          </style>\r\n      </head>\r\n    <body>\r\n      <div style=\"margin-bottom: 20px;\">\r\n  <h1 style=\"text-align: center; font-size: 28px; color: #333;\">${res.data.taskName}任务的详情</h1>\r\n  <p style=\"font-size: 20px;\">任务类型：${res.data.taskType}</p>\r\n  <p style=\"font-size: 20px;\">该任务共含有${res.data.sqlLength}条SQL语句</p>\r\n  <p style=\"font-size: 20px;\">适配结果如下：</p>\r\n</div>\r\n      <table>\r\n        <tr>\r\n          <th>对象名</th>\r\n          <th>对象类型</th>\r\n          <th>CBase实现情况</th>\r\n          <th>修改建议</th>\r\n        </tr>\r\n    `;\r\n\r\n    for (const item of tableData) {\r\n      htmlContent += `\r\n      <tr>\r\n        <td>${item.name}</td>\r\n        <td>${item.type}</td>\r\n        <td>${item.status}</td>\r\n        <td>${item.suggestion}</td>\r\n      </tr>\r\n      `;\r\n    }\r\n\r\n    htmlContent += '</table></body></html>';\r\n\r\n    // 创建 blob 对象，并为其设置 MIME 类型为 'text/html'\r\n    const blob = new Blob([htmlContent], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // 创建一个临时的 a 标签用于下载\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'report.html'; // 指定下载的文件名\r\n    document.body.appendChild(link); // 将 a 标签添加到页面中\r\n    link.click(); // 模拟点击 a 标签\r\n    document.body.removeChild(link); // 移除 a 标签\r\n    URL.revokeObjectURL(url); // 释放 URL 对象\r\n    }\r\n    },\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#search .el-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-dialog__wrapper {\r\n  z-index: 1000;\r\n}\r\n\r\n.el-table th:last-child .cell {\r\n  text-align: center;\r\n}\r\n\r\n.el-table-column--expand {\r\n  width: 50px !important;\r\n  text-align: center;\r\n}\r\n\r\n.el-button--danger {\r\n  background-color: #ff4d4f;\r\n  border-color: #ff4d4f;\r\n}\r\n\r\n.el-table__expand-icon {\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-form-item__label {\r\n  width: 80px;\r\n  text-align: right;\r\n  padding-right: 10px;\r\n}\r\n\r\n.el-button--small {\r\n  padding: 5px 12px;\r\n}\r\n\r\n.like {\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  display: inline-block;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  // justify-content: space-around;;\r\n  margin-right: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.upload-demo {\r\n  margin-top: 20px;\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsTA,OAAAA,GAAA;AACA,SAAAC,IAAA;AACA,SAAAC,UAAA;AACA,SAAAC,OAAA;AACA,SAAAC,QAAA;AACA;AACA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,kBAAA;MACAC,SAAA;MACAC,UAAA;MACAC,UAAA;MACAC,WAAA;MACAC,SAAA;MACAC,WAAA;MACAC,QAAA;MACAC,QAAA;MACAC,YAAA;MACAC,aAAA;MACAC,OAAA;MACAC,SAAA;MACAC,YAAA;MACAC,WAAA;MACAC,YAAA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MACAC,MAAA;MACAC,KAAA;MACAC,QAAA;MACAC,MAAA;QACAC,MAAA;MACA;MACAC,UAAA;QACAC,QAAA;QACAC,OAAA;MACA;MACAC,cAAA;QACAF,QAAA;QACAC,OAAA;MACA;MACAE,UAAA;QACAC,WAAA;QACAC,eAAA;QACAC,QAAA;QACAC,KAAA;QACAC,eAAA;QACAC,SAAA,WAAAA,UAAAF,KAAA;UAAA,gBAAAG,MAAA,CAAAH,KAAA;QAAA;MACA;MACAI,cAAA;QACAP,WAAA;QACAC,eAAA;QACAC,QAAA;QACAC,KAAA;QACAC,eAAA;QACAC,SAAA,WAAAA,UAAAF,KAAA;UAAA,gBAAAG,MAAA,CAAAH,KAAA;QAAA;MACA;MACAK,GAAA;MACAC,aAAA;MACAC,cAAA;MACAC,iBAAA;MAEAC,SAAA;QACAC,UAAA;QACAC,UAAA;MACA;MACAC,aAAA;QACAF,UAAA;MACA;MACAG,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,SAAA;QACAC,UAAA;QACAC,KAAA;MACA;MACAC,WAAA;MACAC,KAAA;MACAC,MAAA;MACAC,OAAA,GAEA;MACAtB,KAAA;MACAuB,MAAA;MACAC,WAAA;QACA/B,QAAA;QACAC,OAAA;MACA;MACA+B,UAAA;QACAC,QAAA;QACAhB,UAAA;MACA;MACA;MACAiB,OAAA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA;MACAC,OAAA;QACAC,QAAA;QACAC,OAAA;MACA;IAEA;EACA;EACAC,UAAA;IACArE,OAAA,EAAAA;EACA;EAEAsE,OAAA,WAAAA,QAAA;IACA,KAAAC,UAAA;IACA;IACA,KAAAC,YAAA;IACA;IACA;IACA;IACA;IACA;IACA,KAAAC,iBAAA;EACA;EACAC,QAAA,EAAAC,aAAA,KACA5E,UAAA;IACA6E,UAAA;IAAA;IACAC,WAAA;EACA,GACA;EACAC,OAAA;IACAN,YAAA,WAAAA,aAAA;MAAA,IAAAO,KAAA;MACA,IAAAC,KAAA,GAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;MACA,KAAAC,KAAA,CAAAC,GAAA;QACAnB,OAAA;UACA,2BAAA5B,MAAA,CAAA0C,KAAA;UAAA;UACA;QACA;MACA,GACAM,IAAA,WAAAC,GAAA;QACAR,KAAA,CAAAb,OAAA,CAAAC,QAAA,GAAAoB,GAAA,CAAArF,IAAA,CAAAiE,QAAA;QACAY,KAAA,CAAAb,OAAA,CAAAE,OAAA,GAAAmB,GAAA,CAAArF,IAAA,CAAAkE,OAAA;MACA,GACAoB,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;IACA;IACAE,UAAA,WAAAA,WAAAC,MAAA;MACA,IAAAC,IAAA,GAAAD,MAAA,CAAAC,IAAA;MACA,IAAAC,KAAA,GAAAF,MAAA,CAAAE,KAAA;MACA,IAAAD,IAAA;QACA,KAAA9B,QAAA,CAAAgC,IAAA,WAAAC,CAAA,EAAAC,CAAA;UACA,IAAAC,WAAA;YACA;YACA;YACA;YACA;UACA;UACA,IAAAC,MAAA,GAAAD,WAAA,CAAAF,CAAA,CAAA5C,UAAA;UACA,IAAAgD,MAAA,GAAAF,WAAA,CAAAD,CAAA,CAAA7C,UAAA;UACA,IAAA0C,KAAA;YACA,OAAAM,MAAA,GAAAD,MAAA;UACA;YACA,OAAAA,MAAA,GAAAC,MAAA;UACA;QACA;MACA,WAAAP,IAAA;QACA,KAAA9B,QAAA,CAAAgC,IAAA,WAAAC,CAAA,EAAAC,CAAA;UACA,IAAAI,KAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAP,CAAA,CAAAQ,SAAA;UACA,IAAAC,KAAA,GAAAH,IAAA,CAAAC,KAAA,CAAAN,CAAA,CAAAO,SAAA;UACA,IAAAV,KAAA;YACA,OAAAW,KAAA,GAAAJ,KAAA;UACA;YACA,OAAAA,KAAA,GAAAI,KAAA;UACA;QACA;MACA;IACA;IAEAC,YAAA,WAAAA,aAAAC,IAAA,EAAAxF,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;IACA;IAEAyF,iBAAA,WAAAA,kBAAAC,QAAA,EAAAF,IAAA,EAAAxF,QAAA;MACAuE,OAAA,CAAAoB,GAAA,WAAAD,QAAA;MACA;IACA;IACAE,eAAA,WAAAA,gBAAAC,GAAA;MACAtB,OAAA,CAAAD,KAAA,WAAAuB,GAAA;MACA;IACA;IACAC,YAAA,WAAAA,aAAAN,IAAA;MACAjB,OAAA,CAAAoB,GAAA;MACA,UAAA9D,OAAA,CAAAK,KAAA;QACA,KAAAL,OAAA,CAAAK,KAAA;MACA;MACA,KAAAL,OAAA,CAAAK,KAAA,CAAA6D,IAAA,CAAAP,IAAA;MACAjB,OAAA,CAAAoB,GAAA,WAAAH,IAAA;IAEA;IACAQ,YAAA,WAAAA,aAAAR,IAAA,EAAAxF,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;IACA;IACA;IACAoD,UAAA,WAAAA,WAAA;MAAA,IAAA6C,MAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAxC,KAAA,EAAAyC,qBAAA,EAAAlC,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACA9C,KAAA,GAAAE,cAAA,CAAAC,OAAA,WACA;cAAAyC,QAAA,CAAAE,IAAA;cAAA,OACAV,MAAA,CAAAhC,KAAA,CAAAC,GAAA;gBACA0C,MAAA;kBACAC,SAAA,EAAAZ,MAAA,CAAAzF,UAAA,CAAAC,QAAA;kBACAqG,QAAA,EAAAb,MAAA,CAAAzF,UAAA,CAAAE;gBACA;gBACAqC,OAAA;kBACA,2BAAA5B,MAAA,CAAA0C,KAAA;gBACA;cACA;YAAA;cAAAyC,qBAAA,GAAAG,QAAA,CAAAM,IAAA;cARA3C,GAAA,GAAAkC,qBAAA,CAAAvH,IAAA;cASA;cACA,IAAAqF,GAAA,CAAA4C,MAAA;gBACAf,MAAA,CAAAgB,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;cACA;;cAEA;cACAjB,MAAA,CAAAtD,OAAA,GAAAyB,GAAA,CAAArF,IAAA;cACAkH,MAAA,CAAArF,UAAA,CAAAI,KAAA,GAAAoD,GAAA,CAAApD,KAAA;YAAA;YAAA;cAAA,OAAAyF,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IACA;IAEA;IACAe,WAAA,WAAAA,YAAAC,EAAA;MAAA,IAAAC,MAAA;MAAA,OAAApB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAmB,SAAA;QAAA,IAAAC,qBAAA,EAAApD,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAkB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhB,IAAA,GAAAgB,SAAA,CAAAf,IAAA;YAAA;cAAAe,SAAA,CAAAf,IAAA;cAAA,OACAW,MAAA,CAAArD,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAAkG,EAAA;gBACAT,MAAA;kBAAAC,SAAA,EAAAS,MAAA,CAAA3G,cAAA,CAAAF,QAAA;kBAAAqG,QAAA,EAAAQ,MAAA,CAAA3G,cAAA,CAAAD;gBAAA;cACA;YAAA;cAAA8G,qBAAA,GAAAE,SAAA,CAAAX,IAAA;cAFA3C,GAAA,GAAAoD,qBAAA,CAAAzI,IAAA;cAAA,MAIAqF,GAAA,CAAA4C,MAAA;gBAAAU,SAAA,CAAAf,IAAA;gBAAA;cAAA;cAAA,OAAAe,SAAA,CAAAC,MAAA,WAAAL,MAAA,CAAAL,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;YAAA;cACAI,MAAA,CAAA1E,QAAA,GAAAwB,GAAA,CAAArF,IAAA;cACAuI,MAAA,CAAAlG,cAAA,CAAAJ,KAAA,GAAAoD,GAAA,CAAApD,KAAA;cACA;YAAA;YAAA;cAAA,OAAA0G,SAAA,CAAAP,IAAA;UAAA;QAAA,GAAAI,QAAA;MAAA;IACA;IACA;IACAjE,iBAAA,WAAAA,kBAAA;MAAA,IAAAsE,MAAA;MAAA,OAAA1B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyB,SAAA;QAAA,IAAAhE,KAAA,EAAAO,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAuB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;YAAA;cACA9C,KAAA,GAAAE,cAAA,CAAAC,OAAA;cAAA+D,SAAA,CAAApB,IAAA;cAAA,OACAiB,MAAA,CAAA3D,KAAA,CAAAC,GAAA;gBACAnB,OAAA;kBACA,2BAAA5B,MAAA,CAAA0C,KAAA;gBACA;cACA;YAAA;cAJAO,GAAA,GAAA2D,SAAA,CAAAhB,IAAA;cAAA,MAOA3C,GAAA,CAAA4C,MAAA;gBAAAe,SAAA,CAAApB,IAAA;gBAAA;cAAA;cAAA,OAAAoB,SAAA,CAAAJ,MAAA,WAAAC,MAAA,CAAAX,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;YAAA;cACAU,MAAA,CAAA1H,OAAA,GAAAkE,GAAA,CAAArF,IAAA,CAAAiJ,UAAA;cACAJ,MAAA,CAAAzH,MAAA,GAAAiE,GAAA,CAAArF,IAAA,CAAAkJ,eAAA;cACAL,MAAA,CAAAxH,KAAA,GAAAgE,GAAA,CAAArF,IAAA,CAAAmJ,eAAA;cACAN,MAAA,CAAAvH,QAAA,GAAA+D,GAAA,CAAArF,IAAA,CAAAoJ,YAAA;YAAA;YAAA;cAAA,OAAAJ,SAAA,CAAAZ,IAAA;UAAA;QAAA,GAAAU,QAAA;MAAA;IACA;IAEA;IACAO,eAAA,WAAAA,gBAAA/G,GAAA;MACA,IAAAgH,SAAA;MACA,IAAAC,QAAA,GAAAjH,GAAA,CAAAkH,QAAA,CAAAC,SAAA,CAAAH,SAAA,CAAAI,MAAA;MACA,OAAAH,QAAA;IACA;IAEA;IACAI,WAAA,WAAAA,YAAArH,GAAA,EAAAoD,MAAA;MACA,IAAA1F,IAAA,GAAAsC,GAAA,CAAAoD,MAAA,CAAAkE,QAAA;MACA,OAAA5J,IAAA,GAAAL,GAAA,CAAAK,IAAA,EAAA6J,MAAA;IACA;IAEA;IACAC,SAAA,WAAAA,UAAAC,EAAA;MAAA,IAAAC,MAAA;MACA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GACAhF,IAAA,eAAA+B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAgD,SAAA;QAAA,IAAA1D,QAAA;QAAA,OAAAS,mBAAA,GAAAI,IAAA,UAAA8C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5C,IAAA,GAAA4C,SAAA,CAAA3C,IAAA;YAAA;cAAA2C,SAAA,CAAA5C,IAAA;cAAA4C,SAAA,CAAA3C,IAAA;cAAA,OAEAoC,MAAA,CAAA9E,KAAA,CAAAsF,MAAA,QAAApI,MAAA,CAAA2H,EAAA;YAAA;cAAApD,QAAA,GAAA4D,SAAA,CAAAvC,IAAA;cACA;cACA,IAAArB,QAAA,CAAAsB,MAAA;gBACA+B,MAAA,CAAA9B,QAAA,CAAAuC,OAAA;gBACAT,MAAA,CAAA3F,UAAA;gBACA2F,MAAA,CAAAzF,iBAAA;gBACA;cACA;gBACAyF,MAAA,CAAA9B,QAAA,CAAA3C,KAAA,CAAAoB,QAAA,CAAA3G,IAAA,CAAAmI,OAAA;cACA;cAAAoC,SAAA,CAAA3C,IAAA;cAAA;YAAA;cAAA2C,SAAA,CAAA5C,IAAA;cAAA4C,SAAA,CAAAG,EAAA,GAAAH,SAAA;cAEAP,MAAA,CAAA9B,QAAA,CAAA3C,KAAA;YAAA;YAAA;cAAA,OAAAgF,SAAA,CAAAnC,IAAA;UAAA;QAAA,GAAAiC,QAAA;MAAA,CAEA,IACA/E,KAAA;QACA0E,MAAA,CAAA9B,QAAA,CAAAyC,IAAA;MACA;IACA;IAEA;IACAC,gBAAA,WAAAA,iBAAAC,GAAA;MACA,KAAAhJ,UAAA,CAAAG,QAAA,GAAA6I,GAAA;MACA;MACA,KAAApJ,UAAA,CAAAC,QAAA,QAAAG,UAAA,CAAAG,QAAA;MACA,KAAAqC,UAAA;MACA,KAAAE,iBAAA;IAEA;IACAuG,mBAAA,WAAAA,oBAAAD,GAAA;MACA,KAAAhJ,UAAA,CAAAC,WAAA,GAAA+I,GAAA;MACA;MACA,KAAApJ,UAAA,CAAAE,OAAA,QAAAE,UAAA,CAAAC,WAAA;MACA,KAAAuC,UAAA;MACA,KAAAE,iBAAA;IACA;IACA;IACAwG,oBAAA,WAAAA,qBAAAF,GAAA;MACA,KAAAxI,cAAA,CAAAL,QAAA,GAAA6I,GAAA;MACA;MACA,KAAAjJ,cAAA,CAAAF,QAAA,QAAAW,cAAA,CAAAL,QAAA;MACA,KAAAqG,WAAA,MAAAnH,QAAA;MACA,KAAAqD,iBAAA;IACA;IACAyG,uBAAA,WAAAA,wBAAAH,GAAA;MACA,KAAAxI,cAAA,CAAAP,WAAA,GAAA+I,GAAA;MACA;MACA,KAAAjJ,cAAA,CAAAD,OAAA,QAAAU,cAAA,CAAAP,WAAA;MACA,KAAAuG,WAAA,MAAAnH,QAAA;MACA,KAAAqD,iBAAA;IACA;IACA;IACA0G,UAAA,WAAAA,WAAAlB,EAAA,EAAAmB,KAAA;MAAA,IAAAC,MAAA;MAAA,OAAAhE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA+D,SAAA;QAAA,IAAA/F,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAA6D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3D,IAAA,GAAA2D,SAAA,CAAA1D,IAAA;YAAA;cAAA0D,SAAA,CAAA1D,IAAA;cAAA,OACAuD,MAAA,CAAAjG,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAA1E,GAAA,GAAAiG,SAAA,CAAAtD,IAAA;cAAA,MAEA3C,GAAA,CAAArF,IAAA,CAAAkD,UAAA,KAAAiI,MAAA,CAAA5K,WAAA;gBAAA+K,SAAA,CAAA1D,IAAA;gBAAA;cAAA;cAEA;cACAuD,MAAA,CAAAlB,QAAA;gBACAC,iBAAA;gBACAC,gBAAA;gBACAC,IAAA;cACA,GACAhF,IAAA,eAAA+B,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAkE,SAAA;gBAAA,IAAA5E,QAAA;gBAAA,OAAAS,mBAAA,GAAAI,IAAA,UAAAgE,UAAAC,SAAA;kBAAA,kBAAAA,SAAA,CAAA9D,IAAA,GAAA8D,SAAA,CAAA7D,IAAA;oBAAA;sBAAA6D,SAAA,CAAA9D,IAAA;sBAAA8D,SAAA,CAAA7D,IAAA;sBAAA,OAEAuD,MAAA,CAAAjG,KAAA,CAAAsF,MAAA,SAAApI,MAAA,CAAA2H,EAAA;oBAAA;sBAAApD,QAAA,GAAA8E,SAAA,CAAAzD,IAAA;sBACA;sBACA,IAAArB,QAAA,CAAAsB,MAAA;wBACAkD,MAAA,CAAAjD,QAAA,CAAAuC,OAAA;wBACAU,MAAA,CAAA9C,WAAA,CAAA6C,KAAA;wBACAC,MAAA,CAAA5G,iBAAA;wBACA;sBACA;wBACA4G,MAAA,CAAAjD,QAAA,CAAA3C,KAAA,CAAAoB,QAAA,CAAA3G,IAAA,CAAAmI,OAAA;sBACA;sBAAAsD,SAAA,CAAA7D,IAAA;sBAAA;oBAAA;sBAAA6D,SAAA,CAAA9D,IAAA;sBAAA8D,SAAA,CAAAf,EAAA,GAAAe,SAAA;sBAEAN,MAAA,CAAAjD,QAAA,CAAA3C,KAAA;oBAAA;oBAAA;sBAAA,OAAAkG,SAAA,CAAArD,IAAA;kBAAA;gBAAA,GAAAmD,QAAA;cAAA,CAEA,IACAjG,KAAA;gBACA6F,MAAA,CAAAjD,QAAA,CAAAyC,IAAA;cACA;cAAAW,SAAA,CAAA1D,IAAA;cAAA;YAAA;cAAA,OAAA0D,SAAA,CAAA1C,MAAA,WAGAuC,MAAA,CAAAjD,QAAA,CAAA3C,KAAA;YAAA;YAAA;cAAA,OAAA+F,SAAA,CAAAlD,IAAA;UAAA;QAAA,GAAAgD,QAAA;MAAA;IAGA;IAEA;IACAM,SAAA,WAAAA,UAAA;MAAA,IAAAC,MAAA;MAAA,OAAAxE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAuE,SAAA;QAAA,IAAA9G,KAAA,EAAA+G,qBAAA,EAAAxG,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAsE,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApE,IAAA,GAAAoE,SAAA,CAAAnE,IAAA;YAAA;cACA9C,KAAA,GAAAE,cAAA,CAAAC,OAAA,WACA;cACA0G,MAAA,CAAAlI,WAAA,CAAA9B,OAAA;cACAgK,MAAA,CAAA9J,UAAA,CAAAC,WAAA;cACA6J,MAAA,CAAAlI,WAAA,CAAA/B,QAAA,GAAAiK,MAAA,CAAA9J,UAAA,CAAAG,QAAA;cAAA+J,SAAA,CAAAnE,IAAA;cAAA,OACA+D,MAAA,CAAAzG,KAAA,CAAAC,GAAA;gBACA0C,MAAA;kBACAC,SAAA,EAAA6D,MAAA,CAAAlI,WAAA,CAAA/B,QAAA;kBACAqG,QAAA,EAAA4D,MAAA,CAAAlI,WAAA,CAAA9B,OAAA;kBACAqK,QAAA,EAAAL,MAAA,CAAAlI,WAAA,CAAAwI;kBACA;gBACA;gBACAjI,OAAA;kBACA,2BAAA5B,MAAA,CAAA0C,KAAA;gBACA;cACA;YAAA;cAAA+G,qBAAA,GAAAE,SAAA,CAAA/D,IAAA;cAVA3C,GAAA,GAAAwG,qBAAA,CAAA7L,IAAA;cAAA,MAaAqF,GAAA,CAAA4C,MAAA;gBAAA8D,SAAA,CAAAnE,IAAA;gBAAA;cAAA;cAAA,OAAAmE,SAAA,CAAAnD,MAAA,WAAA+C,MAAA,CAAAzD,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;YAAA;cACAwD,MAAA,CAAA/H,OAAA,GAAAyB,GAAA,CAAArF,IAAA;cACA2L,MAAA,CAAA9J,UAAA,CAAAI,KAAA,GAAAoD,GAAA,CAAApD,KAAA;YAAA;YAAA;cAAA,OAAA8J,SAAA,CAAA3D,IAAA;UAAA;QAAA,GAAAwD,QAAA;MAAA;IACA;IAEA;IACAM,gBAAA,WAAAA,iBAAAnC,EAAA;MAAA,IAAAoC,MAAA;MAAA,OAAAhF,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA+E,SAAA;QAAA,IAAAC,qBAAA,EAAAhH,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAA8E,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5E,IAAA,GAAA4E,SAAA,CAAA3E,IAAA;YAAA;cACAuE,MAAA,CAAA1J,iBAAA;cAAA8J,SAAA,CAAA3E,IAAA;cAAA,OACAuE,MAAA,CAAAjH,KAAA,CAAAC,GAAA,QAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAAsC,qBAAA,GAAAE,SAAA,CAAAvE,IAAA;cAAA3C,GAAA,GAAAgH,qBAAA,CAAArM,IAAA;cACAmM,MAAA,CAAAzI,UAAA,GAAA2B,GAAA,CAAArF,IAAA;cACAmM,MAAA,CAAAzI,UAAA,CAAAqG,EAAA,GAAAA,EAAA;YAAA;YAAA;cAAA,OAAAwC,SAAA,CAAAnE,IAAA;UAAA;QAAA,GAAAgE,QAAA;MAAA;IACA;IACAI,OAAA,WAAAA,QAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,KAAA,CAAAC,aAAA,CAAAC,QAAA;QAAA,IAAAC,KAAA,GAAA1F,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyF,SAAAC,KAAA;UAAA,IAAAC,qBAAA,EAAA3H,GAAA;UAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAyF,UAAAC,SAAA;YAAA,kBAAAA,SAAA,CAAAvF,IAAA,GAAAuF,SAAA,CAAAtF,IAAA;cAAA;gBAAA,IACAmF,KAAA;kBAAAG,SAAA,CAAAtF,IAAA;kBAAA;gBAAA;gBAAA,OAAAsF,SAAA,CAAAtE,MAAA,WAAA6D,MAAA,CAAAvE,QAAA,CAAA3C,KAAA;cAAA;gBAAA2H,SAAA,CAAAtF,IAAA;gBAAA,OACA6E,MAAA,CAAAvH,KAAA,CAAAiI,GAAA,QAAA/K,MAAA,CAAAqK,MAAA,CAAA/I,UAAA,CAAAqG,EAAA;kBACAqD,OAAA,EAAAX,MAAA,CAAA/I,UAAA,CAAAf;gBACA;cAAA;gBAAAqK,qBAAA,GAAAE,SAAA,CAAAlF,IAAA;gBAFA3C,GAAA,GAAA2H,qBAAA,CAAAhN,IAAA;gBAAA,MAGAqF,GAAA,CAAA4C,MAAA;kBAAAiF,SAAA,CAAAtF,IAAA;kBAAA;gBAAA;gBAAA,OAAAsF,SAAA,CAAAtE,MAAA,WAAA6D,MAAA,CAAAvE,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;cAAA;gBACAsE,MAAA,CAAAhK,iBAAA;gBACAgK,MAAA,CAAAvE,QAAA,CAAAuC,OAAA;gBACAgC,MAAA,CAAApI,UAAA;cAAA;cAAA;gBAAA,OAAA6I,SAAA,CAAA9E,IAAA;YAAA;UAAA,GAAA0E,QAAA;QAAA,CACA;QAAA,iBAAAO,EAAA;UAAA,OAAAR,KAAA,CAAAS,KAAA,OAAAC,SAAA;QAAA;MAAA;IACA;IAEAC,aAAA,WAAAA,cAAA;MACA,KAAAC,OAAA,CAAAzG,IAAA;IACA;IACA0G,YAAA,WAAAA,aAAA;MACA,KAAAD,OAAA,CAAAzG,IAAA;IACA;IACA2G,SAAA,WAAAA,UAAAC,MAAA,EAAA1C,KAAA;MACA,IAAA7F,GAAA,QAAAH,KAAA,CAAAC,GAAA,eAAA/C,MAAA,CAAAwL,MAAA;MACA,KAAAvJ,UAAA;MACA,KAAAgE,WAAA,CAAA6C,KAAA;MACA,KAAA3G,iBAAA;IACA;IACAsJ,UAAA,WAAAA,WAAA9D,EAAA,EAAA+D,OAAA;MAAA,IAAAC,OAAA;MAAA,OAAA5G,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA2G,UAAA;QAAA,IAAA3I,GAAA,EAAAsB,QAAA,EAAAsH,SAAA;QAAA,OAAA7G,mBAAA,GAAAI,IAAA,UAAA0G,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAxG,IAAA,GAAAwG,UAAA,CAAAvG,IAAA;YAAA;cACAmG,OAAA,CAAAnN,OAAA;cAAAuN,UAAA,CAAAvG,IAAA;cAAA,OACAmG,OAAA,CAAA7I,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAA1E,GAAA,GAAA8I,UAAA,CAAAnG,IAAA;cACAxC,OAAA,CAAAoB,GAAA,CAAAvB,GAAA,CAAArF,IAAA;cACAwF,OAAA,CAAAoB,GAAA,WAAAvB,GAAA,CAAArF,IAAA,CAAAgD,QAAA;cAAA,MACAqC,GAAA,CAAArF,IAAA,CAAAgD,QAAA,KAAA+K,OAAA,CAAA5N,UAAA,IAAAkF,GAAA,CAAArF,IAAA,CAAAgD,QAAA,KAAA+K,OAAA,CAAA7N,SAAA;gBAAAiO,UAAA,CAAAvG,IAAA;gBAAA;cAAA;cAAAuG,UAAA,CAAAxG,IAAA;cAAAwG,UAAA,CAAAvG,IAAA;cAAA,OAEAwG,OAAA,CAAAC,IAAA;cACA;cACAN,OAAA,CAAA7I,KAAA,CAAAC,GAAA,gBAAA/C,MAAA,CAAA2H,EAAA,IACA,IAAAqE,OAAA,WAAAE,CAAA,EAAAC,MAAA;gBAAA,OAAAC,UAAA;kBAAA,OAAAD,MAAA,KAAAE,KAAA;gBAAA,WAAAX,OAAA;cAAA;cAAA,CACA;YAAA;cAJAnH,QAAA,GAAAwH,UAAA,CAAAnG,IAAA;cAKA,IAAArB,QAAA,CAAAsB,MAAA;gBACA8F,OAAA,CAAAnN,OAAA;cACA;cACAmN,OAAA,CAAA1J,UAAA;cACA0J,OAAA,CAAA1F,WAAA;cACA0F,OAAA,CAAAxJ,iBAAA;cACAiB,OAAA,CAAAoB,GAAA,cAAAD,QAAA;cAAAwH,UAAA,CAAAvG,IAAA;cAAA;YAAA;cAAAuG,UAAA,CAAAxG,IAAA;cAAAwG,UAAA,CAAAzD,EAAA,GAAAyD,UAAA;cAEA3I,OAAA,CAAAD,KAAA,mBAAA4I,UAAA,CAAAzD,EAAA;cACAqD,OAAA,CAAA7I,KAAA,CAAAwJ,IAAA,mBAAAtM,MAAA,CAAA2H,EAAA;YAAA;cAAAoE,UAAA,CAAAvG,IAAA;cAAA;YAAA;cAAAuG,UAAA,CAAAxG,IAAA;cAKAnC,OAAA,CAAAoB,GAAA;cAAAuH,UAAA,CAAAvG,IAAA;cAAA,OACAwG,OAAA,CAAAC,IAAA;cACA;cACAN,OAAA,CAAA7I,KAAA,CAAAC,GAAA,gBAAA/C,MAAA,CAAA2H,EAAA,IACA,IAAAqE,OAAA,WAAAE,CAAA,EAAAC,MAAA;gBAAA,OAAAC,UAAA;kBAAA,OAAAD,MAAA,KAAAE,KAAA;gBAAA,WAAAX,OAAA;cAAA;cAAA,CACA;YAAA;cAJAnH,SAAA,GAAAwH,UAAA,CAAAnG,IAAA;cAKAxC,OAAA,CAAAoB,GAAA,gBAAAD,SAAA;cACA,IAAAA,SAAA,CAAAsB,MAAA;gBACA8F,OAAA,CAAAnN,OAAA;cACA;cACAmN,OAAA,CAAA1J,UAAA;cACA0J,OAAA,CAAA1F,WAAA;cACA0F,OAAA,CAAAxJ,iBAAA;cAAA4J,UAAA,CAAAvG,IAAA;cAAA;YAAA;cAAAuG,UAAA,CAAAxG,IAAA;cAAAwG,UAAA,CAAAQ,EAAA,GAAAR,UAAA;cAEAJ,OAAA,CAAA7F,QAAA,CAAA3C,KAAA,CAAA4I,UAAA,CAAAQ,EAAA;cACAnJ,OAAA,CAAAD,KAAA,mBAAA4I,UAAA,CAAAQ,EAAA;cACAZ,OAAA,CAAA7I,KAAA,CAAAwJ,IAAA,mBAAAtM,MAAA,CAAA2H,EAAA;YAAA;YAAA;cAAA,OAAAoE,UAAA,CAAA/F,IAAA;UAAA;QAAA,GAAA4F,SAAA;MAAA;IAIA;IAEAY,eAAA,WAAAA,gBAAA7E,EAAA;MAAA,IAAA8E,OAAA;MAAA,OAAA1H,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyH,UAAA;QAAA,IAAAzJ,GAAA,EAAA0J,QAAA,EAAApI,QAAA,EAAAqI,UAAA;QAAA,OAAA5H,mBAAA,GAAAI,IAAA,UAAAyH,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAvH,IAAA,GAAAuH,UAAA,CAAAtH,IAAA;YAAA;cAAAsH,UAAA,CAAAtH,IAAA;cAAA,OACAiH,OAAA,CAAA3J,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAA1E,GAAA,GAAA6J,UAAA,CAAAlH,IAAA;cACAxC,OAAA,CAAAoB,GAAA,WAAAvB,GAAA,CAAArF,IAAA;cACA;cACA;cAAA,MACAqF,GAAA,CAAArF,IAAA,CAAAgD,QAAA,IAAA6L,OAAA,CAAA1O,UAAA,IAAAkF,GAAA,CAAArF,IAAA,CAAAgD,QAAA,IAAA6L,OAAA,CAAA3O,SAAA;gBAAAgP,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA,MACAvC,GAAA,CAAArF,IAAA,CAAAkD,UAAA,KAAA2L,OAAA,CAAAvO,SAAA;gBAAA4O,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA;cACAiH,OAAA,CAAApB,OAAA,CAAAzG,IAAA;gBAAAiF,IAAA;gBAAApE,MAAA;kBAAAsH,MAAA,EAAApF,EAAA;kBAAA/G,QAAA,EAAAqC,GAAA,CAAArF,IAAA,CAAAgD;gBAAA;cAAA;cAAAkM,UAAA,CAAAtH,IAAA;cAAA;YAAA;cAAA,MACAvC,GAAA,CAAArF,IAAA,CAAAkD,UAAA;gBAAAgM,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA,OAAAsH,UAAA,CAAAtG,MAAA,WACAiG,OAAA,CAAA3G,QAAA,CAAA3C,KAAA;YAAA;cAAA2J,UAAA,CAAAtH,IAAA;cAAA;YAAA;cAAA,MAGAvC,GAAA,CAAArF,IAAA,CAAAkD,UAAA,KAAA2L,OAAA,CAAAvO,SAAA;gBAAA4O,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA;cACAiH,OAAA,CAAApB,OAAA,CAAAzG,IAAA;gBAAAiF,IAAA;gBAAApE,MAAA;kBAAAsH,MAAA,EAAApF;gBAAA;cAAA;cAAAmF,UAAA,CAAAtH,IAAA;cAAA;YAAA;cAAA,MACAvC,GAAA,CAAArF,IAAA,CAAAkD,UAAA;gBAAAgM,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAA,OAAAsH,UAAA,CAAAtG,MAAA,WACAiG,OAAA,CAAA3G,QAAA,CAAA3C,KAAA;YAAA;cAIA;cACAwJ,QAAA,GAAAF,OAAA,CAAAO,MAAA,CAAAC,OAAA,qBAAAtF,EAAA;cACAvE,OAAA,CAAAoB,GAAA,SAAAmI,QAAA;cACA;cAAA,KACA;gBAAAG,UAAA,CAAAtH,IAAA;gBAAA;cAAA;cAAAsH,UAAA,CAAAtH,IAAA;cAAA,OACAiH,OAAA,CAAA3J,KAAA,CAAAC,GAAA,gBAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAApD,QAAA,GAAAuI,UAAA,CAAAlH,IAAA;cACAgH,UAAA,GAAAM,IAAA,CAAAjJ,KAAA,CAAAM,QAAA,CAAA3G,IAAA,CAAAuP,UAAA;cAAAL,UAAA,CAAAtH,IAAA;cAAA,OACAiH,OAAA,CAAAO,MAAA,CAAAI,QAAA;gBAAAL,MAAA,EAAApF,EAAA;gBAAA/J,IAAA,EAAAgP;cAAA;YAAA;YAAA;cAAA,OAAAE,UAAA,CAAA9G,IAAA;UAAA;QAAA,GAAA0G,SAAA;MAAA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAW,YAAA,WAAAA,aAAA1F,EAAA;MACA,KAAA2F,WAAA,CAAA3F,EAAA;IACA;IACA4F,OAAA,WAAAA,QAAA;MACA,KAAAvM,WAAA;IACA;IACAwM,SAAA,WAAAA,UAAA;MACA,KAAAxM,WAAA;MACA,KAAAG,OAAA;QACAwG,EAAA;QACAkC,IAAA;QACA4D,IAAA;QACAC,KAAA;MACA;MACA,KAAAvN,aAAA;IACA;IACAwN,aAAA,WAAAA,cAAAhG,EAAA;MACA,KAAAiG,YAAA;MACA,KAAAxN,cAAA;MACA,KAAAzB,WAAA,GAAAgJ,EAAA;IACA;IACAkG,cAAA,WAAAA,eAAAlG,EAAA,EAAAmG,QAAA;MAAA,IAAAC,OAAA;MAAA,OAAAhJ,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA+I,UAAA;QAAA,IAAA/K,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAA6I,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA3I,IAAA,GAAA2I,UAAA,CAAA1I,IAAA;YAAA;cAAA0I,UAAA,CAAA1I,IAAA;cAAA,OACAuI,OAAA,CAAAjL,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAA1E,GAAA,GAAAiL,UAAA,CAAAtI,IAAA;cAAA,MACA3C,GAAA,CAAArF,IAAA,CAAAkD,UAAA,IAAAiN,OAAA,CAAA7P,SAAA,IAAA+E,GAAA,CAAArF,IAAA,CAAAkD,UAAA,IAAAiN,OAAA,CAAA1P,QAAA;gBAAA6P,UAAA,CAAA1I,IAAA;gBAAA;cAAA;cACAuI,OAAA,CAAA9M,KAAA;cACA8M,OAAA,CAAAlQ,kBAAA;cACAkQ,OAAA,CAAApP,WAAA,GAAAmP,QAAA;cACAC,OAAA,CAAAnP,YAAA,GAAA+I,EAAA;cAAAuG,UAAA,CAAA1I,IAAA;cAAA;YAAA;cAAA,MACAvC,GAAA,CAAArF,IAAA,CAAAkD,UAAA,IAAAiN,OAAA,CAAA5P,WAAA;gBAAA+P,UAAA,CAAA1I,IAAA;gBAAA;cAAA;cAAA,OAAA0I,UAAA,CAAA1H,MAAA,WACAuH,OAAA,CAAAjI,QAAA,CAAA3C,KAAA;YAAA;YAAA;cAAA,OAAA+K,UAAA,CAAAlI,IAAA;UAAA;QAAA,GAAAgI,SAAA;MAAA;IAEA;IAEA;IACAG,UAAA,WAAAA,WAAAjO,GAAA;MACA;MACA;MACA,KAAApB,QAAA,GAAAoB,GAAA,CAAAgG,EAAA;MACA,KAAAD,WAAA,CAAA/F,GAAA,CAAAgG,EAAA;MACA,KAAA/D,iBAAA;IACA;IACA;IACAiM,kBAAA,WAAAA,mBAAA;MACA,IAAAC,EAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAF,EAAA;MACA,KAAAG,QAAA,GAAAH,EAAA,CAAAtN,KAAA,IAAA8I,IAAA;MACA;IACA;IAEA;IACA4E,iBAAA,WAAAA,kBAAAC,IAAA;MAAA,IAAAC,OAAA;MACA,KAAA9G,QAAA,UACA7E,IAAA;QACA2L,OAAA,CAAAhQ,WAAA;QACAgQ,OAAA,CAAA/P,YAAA;QACA8P,IAAA;MACA,GACAxL,KAAA;IACA;IAEA;IACA0L,MAAA,WAAAA,OAAA;MAAA,IAAAC,OAAA;MACA,KAAAvE,KAAA,CAAAwE,YAAA,CAAAtE,QAAA;QAAA,IAAAuE,KAAA,GAAAhK,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA+J,UAAArE,KAAA;UAAA,IAAAjI,KAAA,EAAAuM,qBAAA,EAAAhM,GAAA;UAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAA8J,WAAAC,UAAA;YAAA,kBAAAA,UAAA,CAAA5J,IAAA,GAAA4J,UAAA,CAAA3J,IAAA;cAAA;gBACA9C,KAAA,GAAAE,cAAA,CAAAC,OAAA;gBAAA,IACA8H,KAAA;kBAAAwE,UAAA,CAAA3J,IAAA;kBAAA;gBAAA;gBAAA,OAAA2J,UAAA,CAAA3I,MAAA,WAAAqI,OAAA,CAAA/I,QAAA,CAAA3C,KAAA;cAAA;gBAAAgM,UAAA,CAAA3J,IAAA;gBAAA,OACAqJ,OAAA,CAAA/L,KAAA,CAAAwJ,IAAA;kBACAtB,OAAA,EAAA6D,OAAA,CAAAvO,SAAA,CAAAC,UAAA;kBACA6O,OAAA,EAAAP,OAAA,CAAAvO,SAAA,CAAAE;kBACA;gBACA;kBACAoB,OAAA;oBACA,2BAAA5B,MAAA,CAAA0C,KAAA;kBACA;gBAAA;cAAA;gBAAAuM,qBAAA,GAAAE,UAAA,CAAAvJ,IAAA;gBAPA3C,GAAA,GAAAgM,qBAAA,CAAArR,IAAA;gBAAA,MAQAqF,GAAA,CAAA4C,MAAA;kBAAAsJ,UAAA,CAAA3J,IAAA;kBAAA;gBAAA;gBAAA,OAAA2J,UAAA,CAAA3I,MAAA,WAAAqI,OAAA,CAAA/I,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;cAAA;gBACA8I,OAAA,CAAAvE,KAAA,CAAAwE,YAAA,CAAAO,WAAA;gBACAR,OAAA,CAAA1O,aAAA;gBACA0O,OAAA,CAAA/I,QAAA,CAAAuC,OAAA;gBACAwG,OAAA,CAAA5M,UAAA;gBACA4M,OAAA,CAAA1M,iBAAA;cAAA;cAAA;gBAAA,OAAAgN,UAAA,CAAAnJ,IAAA;YAAA;UAAA,GAAAgJ,SAAA;QAAA,CACA;QAAA,iBAAAM,GAAA;UAAA,OAAAP,KAAA,CAAA7D,KAAA,OAAAC,SAAA;QAAA;MAAA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAoE,OAAA,WAAAA,QAAA;MAAA,IAAAC,OAAA;MAAA,OAAAzK,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAwK,UAAA;QAAA,OAAAzK,mBAAA,GAAAI,IAAA,UAAAsK,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAApK,IAAA,GAAAoK,UAAA,CAAAnK,IAAA;YAAA;cACAgK,OAAA,CAAAlF,KAAA,CAAAsF,UAAA,CAAApF,QAAA;gBAAA,IAAAqF,KAAA,GAAA9K,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA6K,UAAAnF,KAAA;kBAAA,IAAAoF,qBAAA,EAAA9M,GAAA,EAAA+M,QAAA,EAAAzL,QAAA,EAAA0L,MAAA;kBAAA,OAAAjL,mBAAA,GAAAI,IAAA,UAAA8K,WAAAC,UAAA;oBAAA,kBAAAA,UAAA,CAAA5K,IAAA,GAAA4K,UAAA,CAAA3K,IAAA;sBAAA;wBAAA,IACAmF,KAAA;0BAAAwF,UAAA,CAAA3K,IAAA;0BAAA;wBAAA;wBAAA,OAAA2K,UAAA,CAAA3J,MAAA,WAAAgJ,OAAA,CAAA1J,QAAA,CAAA3C,KAAA;sBAAA;wBAAA,MAGAqM,OAAA,CAAA5Q,YAAA;0BAAAuR,UAAA,CAAA3K,IAAA;0BAAA;wBAAA;wBAAA2K,UAAA,CAAA3K,IAAA;wBAAA,OACAgK,OAAA,CAAA1M,KAAA,CAAAwJ,IAAA;0BACA8D,KAAA,EAAAZ,OAAA,CAAA7Q,WAAA;0BACA0R,QAAA,EAAAb,OAAA,CAAA9O,OAAA,CAAAC,QAAA;0BACA2P,QAAA,EAAAd,OAAA,CAAA9O,OAAA,CAAAG,SAAA;0BACA0P,QAAA,EAAAf,OAAA,CAAA9O,OAAA,CAAAE,QAAA;0BACA4P,UAAA,EAAAhB,OAAA,CAAA9O,OAAA,CAAAI;wBACA;sBAAA;wBAAAiP,qBAAA,GAAAI,UAAA,CAAAvK,IAAA;wBANA3C,GAAA,GAAA8M,qBAAA,CAAAnS,IAAA;wBAAA,MAQAqF,GAAA,CAAA4C,MAAA;0BAAAsK,UAAA,CAAA3K,IAAA;0BAAA;wBAAA;wBACAgK,OAAA,CAAA9Q,YAAA,GAAAuE,GAAA,CAAArF,IAAA,CAAAsI,EAAA;wBACA9C,OAAA,CAAAoB,GAAA,aAAAgL,OAAA,CAAA9Q,YAAA;wBAAAyR,UAAA,CAAA3K,IAAA;wBAAA,OACAgK,OAAA,CAAAiB,SAAA;sBAAA;wBAEAT,QAAA,OAAAU,QAAA;wBACAV,QAAA,CAAAW,MAAA,WAAAnB,OAAA,CAAA9Q,YAAA;wBAGA0E,OAAA,CAAAoB,GAAA,YAAAgL,OAAA,CAAA3Q,QAAA;wBACA;wBACA2Q,OAAA,CAAA3Q,QAAA,CAAA+R,OAAA,WAAAvM,IAAA;0BACA2L,QAAA,CAAAW,MAAA,UAAAtM,IAAA,CAAAwM,GAAA;wBACA;wBAAAV,UAAA,CAAA5K,IAAA;wBAAA4K,UAAA,CAAA3K,IAAA;wBAAA,OAGAsL,KAAA,CAAAtB,OAAA,CAAA/Q,SAAA;0BACAsS,MAAA;0BACAC,IAAA,EAAAhB;wBACA;sBAAA;wBAHAzL,QAAA,GAAA4L,UAAA,CAAAvK,IAAA;wBAAAuK,UAAA,CAAA3K,IAAA;wBAAA,OAIAjB,QAAA,CAAA0M,IAAA;sBAAA;wBAAAhB,MAAA,GAAAE,UAAA,CAAAvK,IAAA;wBACAxC,OAAA,CAAAoB,GAAA,CAAAyL,MAAA;wBAEA,IAAAA,MAAA,CAAApK,MAAA,YAAAoK,MAAA,CAAApK,MAAA;0BACA2J,OAAA,CAAA1J,QAAA,CAAAuC,OAAA,CAAA4H,MAAA,CAAAlK,OAAA;wBACA;0BACAyJ,OAAA,CAAA1J,QAAA,CAAA3C,KAAA,CAAA8M,MAAA,CAAAlK,OAAA;wBACA;wBAAAoK,UAAA,CAAA3K,IAAA;wBAAA;sBAAA;wBAAA2K,UAAA,CAAA5K,IAAA;wBAAA4K,UAAA,CAAA7H,EAAA,GAAA6H,UAAA;wBAGA/M,OAAA,CAAAD,KAAA,WAAAgN,UAAA,CAAA7H,EAAA;wBACAkH,OAAA,CAAA1J,QAAA,CAAA3C,KAAA;sBAAA;wBAGAqM,OAAA,CAAA/N,QAAA;wBACA+N,OAAA,CAAAlF,KAAA,CAAAsF,UAAA,CAAAP,WAAA;wBACAG,OAAA,CAAApP,cAAA;wBACAoP,OAAA,CAAAvJ,WAAA,CAAAuJ,OAAA,CAAA7Q,WAAA;wBACA6Q,OAAA,CAAArN,iBAAA;wBAAAgO,UAAA,CAAA3K,IAAA;wBAAA;sBAAA;wBAEAgK,OAAA,CAAA1J,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAA8C,OAAA;sBAAA;sBAAA;wBAAA,OAAAoK,UAAA,CAAAnK,IAAA;oBAAA;kBAAA,GAAA8J,SAAA;gBAAA,CAGA;gBAAA,iBAAAoB,GAAA;kBAAA,OAAArB,KAAA,CAAA3E,KAAA,OAAAC,SAAA;gBAAA;cAAA;YAAA;YAAA;cAAA,OAAAwE,UAAA,CAAA3J,IAAA;UAAA;QAAA,GAAAyJ,SAAA;MAAA;IACA;IAGA0B,QAAA,WAAAA,SAAA;MAAA,IAAAC,OAAA;MAAA,OAAArM,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAoM,UAAA;QAAA,IAAA1J,EAAA,EAAA2J,qBAAA,EAAArO,GAAA;QAAA,OAAA+B,mBAAA,GAAAI,IAAA,UAAAmM,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAjM,IAAA,GAAAiM,UAAA,CAAAhM,IAAA;YAAA;cACAmC,EAAA,GAAAyJ,OAAA,CAAAxS,YAAA;cACAwS,OAAA,CAAAxS,YAAA;cAAA4S,UAAA,CAAAhM,IAAA;cAAA,OACA4L,OAAA,CAAAtO,KAAA,CAAAiI,GAAA,SAAA/K,MAAA,CAAA2H,EAAA;gBACAyI,KAAA,EAAAgB,OAAA,CAAAzS,WAAA;gBACA0R,QAAA,EAAAe,OAAA,CAAA1Q,OAAA,CAAAC,QAAA;gBACA;gBACA4P,QAAA,EAAAa,OAAA,CAAA1Q,OAAA,CAAAE,QAAA;gBACA4P,UAAA,EAAAY,OAAA,CAAA1Q,OAAA,CAAAI;cACA;YAAA;cAAAwQ,qBAAA,GAAAE,UAAA,CAAA5L,IAAA;cANA3C,GAAA,GAAAqO,qBAAA,CAAA1T,IAAA;cAQAwF,OAAA,CAAAoB,GAAA,SAAA4M,OAAA,CAAA9G,KAAA,CAAAmH,MAAA,CAAAC,WAAA,CAAApK,MAAA;cAAA,MACA8J,OAAA,CAAA9G,KAAA,CAAAmH,MAAA,CAAAC,WAAA,CAAApK,MAAA;gBAAAkK,UAAA,CAAAhM,IAAA;gBAAA;cAAA;cACA4L,OAAA,CAAA1S,YAAA,GAAAiJ,EAAA;cACAvE,OAAA,CAAAoB,GAAA,mBAAA4M,OAAA,CAAA1S,YAAA;cAAA8S,UAAA,CAAAhM,IAAA;cAAA,OACA4L,OAAA,CAAAX,SAAA;YAAA;cACAW,OAAA,CAAA9G,KAAA,CAAAmH,MAAA,CAAAE,MAAA;YAAA;cAGAP,OAAA,CAAA9G,KAAA,CAAAsF,UAAA,CAAAP,WAAA;cACA+B,OAAA,CAAAvT,kBAAA;cACAuT,OAAA,CAAAtL,QAAA,CAAAuC,OAAA;cACA;cACA+I,OAAA,CAAAnL,WAAA,CAAAmL,OAAA,CAAAzS,WAAA;cACAyS,OAAA,CAAAjP,iBAAA;cACAiP,OAAA,CAAAzS,WAAA;YAAA;YAAA;cAAA,OAAA6S,UAAA,CAAAxL,IAAA;UAAA;QAAA,GAAAqL,SAAA;MAAA;IACA;IAEAO,cAAA,WAAAA,eAAAjK,EAAA;MAAA,IAAAkK,OAAA;MAAA,OAAA9M,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA6M,UAAA;QAAA,IAAA7O,GAAA,EAAAkK,UAAA,EAAA4E,SAAA,EAAAC,WAAA,EAAAC,EAAA,EAAAC,UAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,IAAA;QAAA,OAAAtN,mBAAA,GAAAI,IAAA,UAAAmN,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAjN,IAAA,GAAAiN,UAAA,CAAAhN,IAAA;YAAA;cAAAgN,UAAA,CAAAhN,IAAA;cAAA,OAGAqM,OAAA,CAAA/O,KAAA,CAAAC,GAAA,cAAA/C,MAAA,CAAA2H,EAAA;YAAA;cAAA1E,GAAA,GAAAuP,UAAA,CAAA5M,IAAA;cAEA,IAAA3C,GAAA,CAAArF,IAAA,CAAAiI,MAAA;gBACAgM,OAAA,CAAA/L,QAAA,CAAA3C,KAAA,CAAAF,GAAA,CAAArF,IAAA,CAAAmI,OAAA;cACA;gBACAoH,UAAA,GAAAD,IAAA,CAAAjJ,KAAA,CAAAhB,GAAA,CAAArF,IAAA,CAAAuP,UAAA;gBAEA4E,SAAA,GAAAU,MAAA,CAAAC,MAAA,CAAAvF,UAAA;gBACA/J,OAAA,CAAAoB,GAAA,cAAAuN,SAAA;gBACA;gBACAC,WAAA,iDAAAhS,MAAA,CAGAiD,GAAA,CAAArF,IAAA,CAAA+C,QAAA,usBAAAX,MAAA,CAmCAiD,GAAA,CAAArF,IAAA,CAAA+C,QAAA,yGAAAX,MAAA,CACAiD,GAAA,CAAArF,IAAA,CAAAgD,QAAA,gFAAAZ,MAAA,CACAiD,GAAA,CAAArF,IAAA,CAAA+U,SAAA;gBAYA,KAAAV,EAAA,MAAAC,UAAA,GAAAH,SAAA,EAAAE,EAAA,GAAAC,UAAA,CAAA5K,MAAA,EAAA2K,EAAA;kBAAAE,IAAA,GAAAD,UAAA,CAAAD,EAAA;kBACAD,WAAA,iCAAAhS,MAAA,CAEAmS,IAAA,CAAAtI,IAAA,yBAAA7J,MAAA,CACAmS,IAAA,CAAAnK,IAAA,yBAAAhI,MAAA,CACAmS,IAAA,CAAAtM,MAAA,yBAAA7F,MAAA,CACAmS,IAAA,CAAAS,UAAA,+BAEA;gBACA;gBAEAZ,WAAA;;gBAEA;gBACAI,IAAA,OAAAS,IAAA,EAAAb,WAAA;kBAAAhK,IAAA;gBAAA;gBACAqK,GAAA,GAAAS,GAAA,CAAAC,eAAA,CAAAX,IAAA,GAEA;gBACAE,IAAA,GAAAhE,QAAA,CAAA0E,aAAA;gBACAV,IAAA,CAAAW,IAAA,GAAAZ,GAAA;gBACAC,IAAA,CAAAY,QAAA;gBACA5E,QAAA,CAAA0C,IAAA,CAAAmC,WAAA,CAAAb,IAAA;gBACAA,IAAA,CAAAc,KAAA;gBACA9E,QAAA,CAAA0C,IAAA,CAAAqC,WAAA,CAAAf,IAAA;gBACAQ,GAAA,CAAAQ,eAAA,CAAAjB,GAAA;cACA;YAAA;YAAA;cAAA,OAAAG,UAAA,CAAAxM,IAAA;UAAA;QAAA,GAAA8L,SAAA;MAAA;IACA;EACA;AAEA"}]}