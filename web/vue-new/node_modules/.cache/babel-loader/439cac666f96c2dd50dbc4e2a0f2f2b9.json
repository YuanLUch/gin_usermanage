{"remainingRequest":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\babel-loader\\lib\\index.js!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\sample\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\sample\\index.vue","mtime":1712628833403},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\babel.config.js","mtime":1701483760000},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702824123341},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\babel-loader\\lib\\index.js","mtime":1702824125233},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702824123341},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":1702824125775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["day","time","mapGetters","Tooltip","getToken","data","uploadUrl","uploadTaskID","selectRowId","selectTaskId","curRowId","allTask","culing","outed","finished","newSet","folder","queryParam","pagesize","pagenum","TaskqueryParam","pagination","currentPage","pageSizeOptions","pageSize","total","showSizeChanger","showTotal","concat","Taskpagination","row","dialogVisible","dialogVisiblex","editAffairVisible","newAffair","affairName","affairDesc","newAffairForm","newTask","taskName","taskType","taskLocal","taskStatus","dialogTitle","title","titlex","caseSet","total1","searchModel","affairInfo","affairId","setList","taskList","tableCase","like","headers","username","user_id","components","created","getSetList","getTaskList","getTokenInfo","getTaskStatistics","computed","_objectSpread","getResData","getTaskData","methods","_this","token","window","sessionStorage","getItem","$http","get","then","res","console","log","catch","error","customSort","column","prop","order","sort","a","b","statusOrder","aOrder","bOrder","aTime","Date","parse","CreatedAt","bTime","handleFileSuccess","response","file","fileList","handleFileError","err","beforeUpload","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$_this2$$http$g","wrap","_callee$","_context","prev","next","params","page_size","page_num","sent","status","$message","message","stop","ID","_this3","_callee2","_yield$_this3$$http$g","_callee2$","_context2","abrupt","_this4","_callee3","_callee3$","_context3","totalCount","inProgressCount","notStartedCount","expiredCount","extractFileName","fixedPart","fileName","taskPath","substring","length","formateDate","property","format","deleteSet","id","_this5","$confirm","confirmButtonText","cancelButtonText","type","_callee4","_callee4$","_context4","delete","success","t0","info","handleSizeChange","val","handleCurrentChange","handleTaskSizeChange","handleTaskCurrentChange","deleteTask","_this6","_callee5","_callee5$","_context5","searchAffair","_this7","_callee6","_yield$_this7$$http$g","_callee6$","_context6","affair_name","name","handleEditAffair","_this8","_callee7","_yield$_this8$$http$g","_callee7$","_context7","editAffair","_this9","$refs","editAffairRef","validate","_ref3","_callee8","valid","_yield$_this9$$http$p","_callee8$","_context8","put","_x","apply","arguments","jumphandelSql","$router","push","jumphandelDl","beginMatch","_this10","_callee9","_response","_callee9$","_context9","t1","jumphandelMatch","_this11","_callee10","taskData","resultData","_callee10$","_context10","taskId","$store","getters","JSON","taskResult","dispatch","getCasesById","getCaseList","addCase","handleAdd","path","cases","handleAddTask","dialogTitlex","handleEditTask","affairid","handleView","handleSelectFolder","fu","document","getElementById","textarea","files","handleCloseDialog","done","_this12","addAffair","_this13","addAffairRef","_ref4","_callee11","_yield$_this13$$http$","_callee11$","_context11","post","resetFields","_x2","addTask","_this14","newTaskRef","_ref5","_callee12","_yield$_this14$$http$","_yield$_this14$$http$2","_res","_callee12$","_context12","AffairId","TaskName","TaskPath","TaskType","TaskStatus","$nextTick","upload","submit","uploadFiles","_x3","downloadResult","_this15","_callee13","htmlContent","blob","url","link","_callee13$","_context13","stringify","DMLDetail","Blob","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["src/views/sample/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"case-set-management\">\r\n    <div>\r\n      <!-- 搜索栏 -->\r\n      <el-card id=\"search\">\r\n        <el-row>\r\n          <el-col :span=\"6\">\r\n            <el-input v-model=\"searchModel.name\" placeholder=\"任务集名\" clearable></el-input>\r\n            <el-button type=\"primary\" round icon=\"el-icon-search\" @click=\"searchAffair\">查询</el-button>\r\n          </el-col>\r\n          <!-- 分页组件 -->\r\n\r\n          <!-- <el-pagination :current-page=\"searchModel.pageNo\" :page-sizes=\"[5, 10, 20, 50]\" :page-size=\"searchModel.pageSize\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\" @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\" :small=\"true\" >\r\n            </el-pagination> -->\r\n          <el-col :span=\"10\" align=\"right\">\r\n            <template>\r\n              <div>\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                  :current-page=\"pagination.currentPage\" :page-sizes=\"pagination.pageSizeOptions\"\r\n                  :page-size=\"pagination.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :total=\"pagination.total\">\r\n                </el-pagination>\r\n              </div>\r\n            </template>\r\n          </el-col>\r\n          <el-col :span=\"6\" align=\"right\">\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" circle @click=\"handleAdd(null)\"></el-button>\r\n          </el-col>\r\n        </el-row>\r\n      </el-card>\r\n\r\n      <!-- 任务集表格 -->\r\n      <el-card>\r\n        <!-- <el-table :data=\"setList\" stripe style=\"width: 100%\" :row-style=\"{ cursor: 'pointer' }\" @row-click=\"handleView\"> -->\r\n        <el-table :data=\"setList\" stripe style=\"width: 100%\" :row-style=\"{ cursor: 'pointer' }\"\r\n          @expand-change=\"handleView\">\r\n          <el-table-column type=\"expand\" @row-click=\"handleView\">\r\n            <template slot-scope=\"props\">\r\n              <!-- <el-table :data=\"caseSet\" stripe style=\"width: 80%\"> -->\r\n              <el-table :data=\"taskList\" :default-sort=\"{prop: 'CreatedAt', order: 'descending'}\" @sort-change=\"customSort\">\r\n                <el-table-column v-if=\"false\" prop=\"ID\" label=\"任务ID\"> </el-table-column>\r\n                <el-table-column prop=\"taskName\" label=\"任务名称\"></el-table-column>\r\n                <el-table-column prop=\"taskPath\" label=\"任务路径\">\r\n                  <template slot-scope=\"scope\">\r\n                      <tooltip effect=\"dark\" :content=\"scope.row.taskPath\" placement=\"top\">\r\n                      <span>{{ extractFileName(scope.row) }}</span>\r\n                      </tooltip>\r\n                 </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"sqlLength\" label=\"SQL条数\" width=\"80\">\r\n                  <template slot-scope=\"scope\">\r\n                      <div style=\"text-align: center;\">{{ scope.row.sqlLength }}</div>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"taskType\" label=\"任务类型\"></el-table-column>\r\n                <el-table-column prop=\"taskStatus\" label=\"任务状态\" sortable=\"custom\"></el-table-column>\r\n                <el-table-column v-if=\"false\" prop=\"affairId\" label=\"业务ID\"> </el-table-column>\r\n                <el-table-column prop=\"CreatedAt\" label=\"创建时间\" :formatter=\"formateDate\" sortable=\"custom\"></el-table-column>\r\n                <el-table-column prop=\"UpdatedAt\" label=\"修改时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column prop=\"startTime\" label=\"开始时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column prop=\"endTime\" label=\"结束时间\" :formatter=\"formateDate\"></el-table-column>\r\n                <el-table-column label=\"操作\">\r\n                  <template slot-scope=\"scope\">\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"开始\" placement=\"top\">\r\n                        <el-button type=\"primary\" class=\"start\" circle size=\"mini\" icon=\"el-icon-video-play\"\r\n                        @click=\"beginMatch(scope.row.ID)\"></el-button>\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"暂停\" placement=\"top\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-video-pause\"></el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑\" placement=\"top\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-edit\"\r\n                          @click=\"handleEditTask(scope.row.ID, scope.row.affairId)\"></el-button>\r\n                        <!-- <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-download\"></el-button> -->\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"SQL画像/语法匹配\" placement=\"bottom\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-s-opportunity\"\r\n                          @click=\"jumphandelMatch(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n                    <div class=\"button-row\">\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"报告下载\" placement=\"bottom\">\r\n                        <el-button type=\"primary\" circle size=\"mini\" icon=\"el-icon-download\"\r\n                          @click=\"downloadResult(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                      <el-tooltip class=\"item\" effect=\"dark\" content=\"删除任务\" placement=\"bottom\">\r\n                        <el-button type=\"danger\" circle size=\"mini\" icon=\"el-icon-delete\"\r\n                          @click=\"deleteTask(scope.row.ID)\">\r\n                        </el-button>\r\n                      </el-tooltip>\r\n                    </div>\r\n\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n              <!-- 该任务分页栏 -->\r\n              <template>\r\n                <div>\r\n                  <el-pagination @size-change=\"handleTaskSizeChange\" @current-change=\"handleTaskCurrentChange\"\r\n                    :current-page=\"Taskpagination.currentPage\" :page-sizes=\"Taskpagination.pageSizeOptions\"\r\n                    :page-size=\"Taskpagination.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"Taskpagination.total\">\r\n                  </el-pagination>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"false\" prop=\"ID\" label=\"任务集ID\" width=\"120\"></el-table-column>\r\n          <el-table-column prop=\"affairName\" label=\"任务集名称\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"CreatedAt\" label=\"创建时间\" :formatter=\"formateDate\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"UpdatedAt\" label=\"修改时间\" :formatter=\"formateDate\" width=\"200\"></el-table-column>\r\n          <el-table-column label=\"操作\" width=\"400\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"新建任务\" placement=\"top\">\r\n                <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" circle\r\n                  @click=\"handleAddTask(scope.row.ID)\"></el-button></el-tooltip>\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"编辑任务集\" placement=\"top\">\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"small\" circle\r\n                  @click=\"handleEditAffair(scope.row.ID)\"></el-button></el-tooltip>\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"删除任务集\" placement=\"top\">\r\n                <el-button type=\"danger\" circle size=\"small\" icon=\"el-icon-delete\" @click=\"deleteSet(scope.row.ID)\">\r\n                </el-button></el-tooltip>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 新增任务集 -->\r\n        <el-dialog :visible.sync=\"dialogVisible\" title=\"新增任务集\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"addAffairRef\" :model=\"newAffair\" label-width=\"120px\">\r\n            <!-- <el-form-item label=\"任务集ID\" prop=\"id\">\r\n              <el-input v-model=\"newSet.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务集名称\" prop=\"affairName\">\r\n              <el-input v-model=\"newAffair.affairName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"任务集描述\" prop=\"affairDesc\">\r\n              <el-input v-model=\"newAffair.affairDesc\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogVisible = false; selectRowId = null; selectTaskId = null\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addAffair\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n        <!-- 编辑任务集 -->\r\n        <el-dialog :visible.sync=\"editAffairVisible\" :title=\"title\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"editAffairRef\" :model=\"affairInfo\" label-width=\"120px\">\r\n            <!-- <el-form-item label=\"任务集ID\" prop=\"id\">\r\n              <el-input v-model=\"newSet.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务集名称\" prop=\"affairName\">\r\n              <el-input v-model=\"affairInfo.affairName\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editAffairVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editAffair\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n\r\n        <!-- 添加/编辑任务对话框 -->\r\n        <el-dialog :visible.sync=\"dialogVisiblex\" :title=\"titlex\" :before-close=\"handleCloseDialog\" width=\"60%\" center\r\n          :destroy-on-close=\"true\">\r\n          <el-form ref=\"newTaskRef\" :model=\"newTask\" label-width=\"120px\" enctype=\"multipart/form-data\">\r\n            <!-- <el-form-item label=\"任务ID\" prop=\"id\">\r\n              <el-input v-model=\"newCaseForm.id\"></el-input></el-form-item> -->\r\n            <el-form-item label=\"任务名称\">\r\n              <el-input v-model=\"newTask.taskName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"任务类型\">\r\n              <el-select v-model=\"newTask.taskType\" placeholder=\"请选择任务类型\">\r\n                <el-option label=\"MySQL SQL画像\" value=\"MySQL SQL画像\"></el-option>\r\n                <el-option label=\"Oracle SQL画像\" value=\"Oracle SQL画像\"></el-option>\r\n                <el-option label=\"MySQL适配\" value=\"MySQL适配\"></el-option>\r\n                <el-option label=\"Oracle适配\" value=\"Oracle适配\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <!-- <el-form-item label=\"位置\" prop=\"folder\">\r\n              <el-input placeholder=\"请选择文件夹\" v-model=\"newTask.taskLocal\">\r\n                <el-button slot=\"append\" icon=\"el-icon-folder-opened\" @click=\"openFile\"></el-button>\r\n              </el-input>\r\n              <input type=\"file\" ref=\"folderInput\" style=\"display: none\" @change=\"changeFile($event)\" />\r\n            </el-form-item> -->\r\n            <el-form-item label=\"文件位置\">\r\n              <el-upload ref=\"upload\" class=\"upload-demo\" :auto-upload=\"false\" :action=\"uploadUrl\" :data=\"{ taskID: uploadTaskID }\"\r\n                :on-success=\"handleFileSuccess\"\r\n                :on-error=\"handleFileError\"\r\n                :before-upload=\"beforeUpload\"\r\n                :limit=\"1\"\r\n                drag\r\n                multiple\r\n                >\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖拽到此处，或<em>点击上传</em></div>\r\n\r\n              </el-upload>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"dialogVisiblex = false; selectRowId = null; selectTaskId = null\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addTask\">确 定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n      </el-card>\r\n    </div>\r\n\r\n    <div style=\"margin-top: 30px;\"></div>\r\n    <!-- 任务统计 -->\r\n    <div>\r\n      <h3>任务统计</h3>\r\n      <el-row>\r\n        <el-col :span=\"6\">\r\n        <el-card style=\"height: 120px;background-color: ghostwhite;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"allTask\" title=\"全部任务\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: burlywood;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"culing\" title=\"评估中\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n        </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: powderblue; margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"outed\" title=\"未开始\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"6\">\r\n          <el-card style=\"height: 120px;background-color: mintcream;margin: 0 auto\">\r\n          <div>\r\n            <el-statistic :value=\"finished\" title=\"已完成\">\r\n              <template slot=\"formatter\">\r\n\r\n              </template>\r\n            </el-statistic>\r\n          </div>\r\n        </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport day from 'dayjs'\r\nimport { time } from 'echarts';\r\nimport { mapGetters } from 'vuex'\r\nimport { Tooltip } from 'element-ui'\r\nimport { getToken } from '@/utils/auth';\r\n// import Statistic from 'element-ui';\r\n// Vue.use(Statistic)\r\nexport default {\r\n  data() {\r\n    return {\r\n      uploadUrl: \"http://localhost:8000/api/upload\",\r\n      uploadTaskID: 1,\r\n      selectRowId: null,\r\n      selectTaskId: null,\r\n      curRowId: null,\r\n      allTask: 10,\r\n      culing: 5,\r\n      outed: 2,\r\n      finished: 7,\r\n      newSet: {\r\n        folder: \"\"\r\n      },\r\n      queryParam: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      TaskqueryParam: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSizeOptions: [5, 10, 20, 30, 40],\r\n        pageSize: 10,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`,\r\n      },\r\n      Taskpagination: {\r\n        currentPage: 1,\r\n        pageSizeOptions: [5, 10, 20, 30, 40],\r\n        pageSize: 10,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`,\r\n      },\r\n      row: \"\",\r\n      dialogVisible: false,\r\n      dialogVisiblex: false,\r\n      editAffairVisible: false,\r\n\r\n      newAffair: {\r\n        affairName: \"\",\r\n        affairDesc: \"\"\r\n      },\r\n      newAffairForm: {\r\n        affairName: \"\",\r\n      },\r\n      newTask: {\r\n        taskName: \"\",\r\n        taskType: \"\",\r\n        taskLocal: \"\",\r\n        taskStatus: \"未开始\",\r\n      },\r\n      dialogTitle: \"\",\r\n      title: \"\",\r\n      titlex: \"\",\r\n      caseSet: {\r\n\r\n      },\r\n      total: 0,\r\n      total1: 0,\r\n      searchModel: {\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      affairInfo: {\r\n        affairId: 0,\r\n        affairName: ''\r\n      },\r\n      // 任务集合列表数据\r\n      setList: [],\r\n      taskList: [],\r\n      tableCase: {},\r\n      like: true,\r\n      headers: {\r\n        username: '',\r\n        user_id: 0\r\n      },\r\n\r\n    };\r\n  },\r\n  components: {\r\n    Tooltip,\r\n  },\r\n\r\n  created() {\r\n    this.getSetList()\r\n    this.getTaskList()\r\n    this.getTokenInfo()\r\n    // this.user_id = window.sessionStorage.getItem('user_id')\r\n    // this.headers = {\r\n    //   username: sessionStorage.getItem('username'),\r\n    //   user_id: sessionStorage.getItem('user_id')\r\n    // }\r\n    this.getTaskStatistics()\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      getResData: 'data/getResData',  // 获取全局的 resData\r\n      getTaskData: 'task/getTaskData'  // 获取当前任务的画像数据\r\n    })\r\n  },\r\n  methods: {\r\n    getTokenInfo() {\r\n      const token = window.sessionStorage.getItem('token')\r\n      this.$http.get('parse/token', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`, // 将JWT令牌添加到请求头中\r\n          'Content-Type': 'application/json' // 设置请求头为JSON类型\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.headers.username = res.data.username\r\n        this.headers.user_id = res.data.user_id\r\n        console.log(this.headers)\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error); \r\n      });\r\n    },\r\n    // 任务表格排序\r\n    customSort(column) {\r\n      const prop = column.prop\r\n      const order = column.order\r\n      if (prop === 'taskStatus') {\r\n        this.taskList.sort((a, b) => {\r\n          const statusOrder = {\r\n            '已完成': 1,\r\n            '评估中': 2,\r\n            '未开始': 3\r\n          }\r\n          const aOrder = statusOrder[a.taskStatus]\r\n          const bOrder = statusOrder[b.taskStatus]\r\n          if (order === 'descending') {\r\n            return bOrder - aOrder\r\n          } else {\r\n            return aOrder - bOrder\r\n          }\r\n        })\r\n      } else if (prop === 'CreatedAt') {\r\n        this.taskList.sort((a, b) => {\r\n        const aTime = Date.parse(a.CreatedAt)\r\n        const bTime = Date.parse(b.CreatedAt)\r\n        if (order === 'descending') {\r\n          return bTime - aTime\r\n        } else {\r\n          return aTime - bTime\r\n        }\r\n        })\r\n      }\r\n    },\r\n\r\n    handleFileSuccess(response, file, fileList) {\r\n      console.log(\"文件上传成功\", response);\r\n      // 可以在这里处理上传成功后的逻辑，例如更新界面等\r\n    },\r\n    handleFileError(err) {\r\n      console.error(\"文件上传失败\", err);\r\n      // 可以在这里处理上传失败后的逻辑，例如提示用户重新上传等\r\n    },\r\n    beforeUpload(file) {\r\n      console.log(\"准备上传文件\", file);\r\n      // 可以在这里添加一些上传文件前的验证逻辑，例如文件大小、类型等\r\n      // 返回 false 可以阻止上传\r\n    },\r\n    // 获取任务集列表\r\n    async getSetList() {\r\n      const token = sessionStorage.getItem('token')\r\n      // console.log(\"=====>\", this.headers)\r\n      const { data: res } = await this.$http.get('affairs', {\r\n        params: {\r\n          page_size: this.queryParam.pagesize,\r\n          page_num: this.queryParam.pagenum,\r\n        },\r\n        headers: {\r\n            'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }\r\n      })\r\n      // console.log(\"res===>\", res)\r\n      if (res.status !== 200) {\r\n        this.$message.error(res.message)\r\n      }\r\n\r\n      // console.log(res.data)\r\n      this.setList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 获取任务集下的任务列表\r\n    async getTaskList(ID) {\r\n      const { data: res } = await this.$http.get(`task/list/${ID}`, {\r\n        params: { page_size: this.TaskqueryParam.pagesize, page_num: this.TaskqueryParam.pagenum },\r\n      })\r\n      // console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.taskList = res.data\r\n      this.Taskpagination.total = res.total\r\n      // this.pagination.total = res.total\r\n    },\r\n    // 获取任务状态\r\n    async getTaskStatistics() {\r\n      const token = sessionStorage.getItem('token')\r\n      const res = await this.$http.get('task/statistic', {\r\n        headers: {\r\n              'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n          }\r\n      })\r\n      // console.log(\"test\")\r\n      // console.log(res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.allTask = res.data.totalCount\r\n      this.culing = res.data.inProgressCount\r\n      this.outed = res.data.notStartedCount\r\n      this.finished = res.data.expiredCount\r\n    },\r\n\r\n    // 只直接显示文件路径中的文件名\r\n    extractFileName(row) {\r\n      const fixedPart = 'D:\\\\GraduationProject\\\\NPU-DatabaseMigration\\\\gin_GraduationProject\\\\web\\\\'\r\n      const fileName = row.taskPath.substring(fixedPart.length)\r\n      return fileName;\r\n    },\r\n\r\n    // 修改日期格式\r\n    formateDate(row, column) {\r\n      let data = row[column.property]\r\n      return data ? day(data).format('YYYY年MM月DD日 HH:mm') : '暂无'\r\n    },\r\n\r\n    // 删除任务集\r\n    deleteSet(id) {\r\n      // console.log(id)\r\n      this.$confirm('提示：请再次确认', '确定要删除该任务集吗？一旦删除，无法恢复', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(async () => {\r\n          try {\r\n            const response = await this.$http.delete(`set/${id}`)\r\n            // console.log(response)\r\n            if (response.status === 200) {\r\n              this.$message.success('删除成功')\r\n              this.getSetList() // 删除成功后刷新用户列表\r\n              this.getTaskStatistics()\r\n              // this.getTaskList()\r\n            } else {\r\n              this.$message.error(response.data.message || '删除失败，请重试')\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('删除失败，请重试')\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.info('已取消删除')\r\n        });\r\n    },\r\n\r\n    // 更改分页\r\n    handleSizeChange(val) {\r\n      this.pagination.pageSize = val\r\n      // console.log(`每页 ${val} 条, pagesize`, this.pagination.pageSize);\r\n      this.queryParam.pagesize = this.pagination.pageSize\r\n      this.getSetList()\r\n      this.getTaskStatistics()\r\n\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pagination.currentPage = val\r\n      // console.log(`当前页: ${val}`, this.pagination.currentPage);\r\n      this.queryParam.pagenum = this.pagination.currentPage\r\n      this.getSetList()\r\n      this.getTaskStatistics()\r\n    },\r\n    // 更改任务分页\r\n    handleTaskSizeChange(val) {\r\n      this.Taskpagination.pageSize = val\r\n      // console.log(`每页 ${val} 条, pagesize`, this.pagination.pageSize);\r\n      this.TaskqueryParam.pagesize = this.Taskpagination.pageSize\r\n      this.getTaskList(this.curRowId)\r\n      this.getTaskStatistics()\r\n    },\r\n    handleTaskCurrentChange(val) {\r\n      this.Taskpagination.currentPage = val\r\n      // console.log(`当前页: ${val}`, this.pagination.currentPage);\r\n      this.TaskqueryParam.pagenum = this.Taskpagination.currentPage\r\n      this.getTaskList(this.curRowId)\r\n      this.getTaskStatistics()\r\n    },\r\n    //删除任务\r\n    deleteTask(id) {\r\n      // console.log(id)\r\n      this.$confirm('提示：请再次确认', '确定要删除该任务吗？一旦删除，无法恢复', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(async () => {\r\n          try {\r\n            const response = await this.$http.delete(`task/${id}`)\r\n            // console.log(response)\r\n            if (response.status === 200) {\r\n              this.$message.success('删除成功')\r\n              this.getTaskList(id) // 删除成功后刷新用户列表\r\n              this.getTaskStatistics()\r\n              // this.getTaskList()\r\n            } else {\r\n              this.$message.error(response.data.message || '删除失败，请重试')\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('删除失败，请重试')\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.info('已取消删除')\r\n        });\r\n    },\r\n\r\n    // 搜索任务集\r\n    async searchAffair() {\r\n      const token = sessionStorage.getItem('token')\r\n      // console.log(\"进入searchaffair函数\")\r\n      this.searchModel.pagenum = 1\r\n      this.pagination.currentPage = 1\r\n      this.searchModel.pagesize = this.pagination.pageSize\r\n      const { data: res } = await this.$http.get('affair/search', {\r\n        params: {\r\n          page_size: this.searchModel.pagesize,\r\n          page_num: this.searchModel.pagenum,\r\n          affair_name: this.searchModel.name,\r\n          // id: sessionStorage.getItem('user_id')\r\n        },\r\n        headers: {\r\n             'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }\r\n      })\r\n\r\n      // console.log(\"aaaa已经得到后端返回的数据：\", res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.setList = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 编辑任务集合\r\n    async handleEditAffair(id) {\r\n      this.editAffairVisible = true\r\n      const { data: res } = await this.$http.get(`affair/${id}`)\r\n      this.affairInfo = res.data\r\n      this.affairInfo.id = id\r\n    },\r\n    editAffair() {\r\n      this.$refs.editAffairRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.put(`affair/${this.affairInfo.id}`, {\r\n          affairName: this.affairInfo.affairName\r\n        })\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.editAffairVisible = false\r\n        this.$message.success('更新任务集信息成功')\r\n        this.getSetList()\r\n      })\r\n    },\r\n\r\n    jumphandelSql() {\r\n      this.$router.push('/test/result')\r\n    },\r\n    jumphandelDl() {\r\n      this.$router.push('/test/reportdl')\r\n    },\r\n\r\n    async beginMatch(id) {\r\n      const res = await this.$http.get(`task/info/${id}`)\r\n      console.log(res.data)\r\n      console.log(\"任务类型为:\", res.data.taskType)\r\n      if (res.data.taskType === \"Oracle SQL画像\"||res.data.taskType === \"MySQL SQL画像\") {\r\n        try {\r\n           const response = await this.$http.get(`sql/draw/${id}`)\r\n           console.log(\"get task:\",response)\r\n        } catch (error) {\r\n          console.error(\"获取sql画像分析结果失败:\", error)\r\n        }\r\n      }\r\n      else{\r\n        try{\r\n          const response = await this.$http.get(`sql/adapt/${id}`)\r\n          console.log(\"Oracle适配的响应\",response)\r\n        }catch (error) {\r\n          console.error(\"获取sql适配分析结果失败:\", error)\r\n        }\r\n        \r\n      }\r\n    },\r\n\r\n    async jumphandelMatch(id) {\r\n      const res = await this.$http.get(`task/info/${id}`)\r\n      console.log(\"任务状态为：\", res.data)\r\n      // const taskData = this.$store.getters['task/getTaskData'](id)\r\n      // this.$router.push('/test/match')\r\n      if(res.data.taskType==\"Oracle SQL画像\"||res.data.taskType==\"MySQL SQL画像\"){\r\n          if (res.data.taskStatus === '已完成') {\r\n            this.$router.push({name: 'result', params: {taskId: id,taskType:res.data.taskType}})\r\n          } else if (res.data.taskStatus === '未开始') {\r\n            return this.$message.error('任务未开始，不可跳转查看结果')\r\n          }\r\n      }else{\r\n          if (res.data.taskStatus === '已完成') {\r\n            this.$router.push({name: 'match', params: {taskId: id}})\r\n          } else if (res.data.taskStatus === '未开始') {\r\n            return this.$message.error('任务未开始，不可跳转查看结果')\r\n          }\r\n      }\r\n\r\n      // 获取当前任务的任务数据\r\n      const taskData = this.$store.getters['task/getTaskData'](id)\r\n      console.log(\"test\",taskData)\r\n      // if (!taskData) {\r\n      if (1) {\r\n        const response = await this.$http.get(`task/result/${id}`)\r\n        const resultData = JSON.parse(response.data.taskResult)\r\n        await this.$store.dispatch('task/setTaskData', { taskId: id, data: resultData})\r\n      }\r\n    },\r\n    // newTask() {\r\n    //   this.$router.push(\"/test/task\");\r\n    // },\r\n    // openFile() {\r\n    //   this.$refs.folderInput.click();\r\n    // },\r\n    // changeFile(e) {\r\n    //   // const folderPath = e.target.files[0].path; // 获取选择的文件夹路径\r\n    //   const file = e.target.files[0]\r\n    //   console.log(\"拿到的文件为：\", file)\r\n    //   this.newTask.taskLocal = file\r\n    //   // this.newSet.folder = folderPath; // 将路径绑定到数据对象中的属性\r\n    // },\r\n    getCasesById(id) {\r\n      this.getCaseList(id);\r\n    },\r\n    addCase() {\r\n      this.dialogTitle = \"添加任务\";\r\n    },\r\n    handleAdd() {\r\n      this.dialogTitle = \"添加业务合\";\r\n      this.caseSet = {\r\n        id: \"\",\r\n        name: \"\",\r\n        path: \"\",\r\n        cases: [],\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    handleAddTask(id) {\r\n      this.dialogTitlex = \"添加任务\";\r\n      this.dialogVisiblex = true;\r\n      this.selectRowId = id;\r\n    },\r\n    handleEditTask(id, affairid) {\r\n      this.title = \"修改任务\";\r\n      // console.log(\"修改任务\")\r\n      // console.log(this.selectRowId)\r\n      // console.log(this.selectTaskId)\r\n      this.dialogVisiblex = true;\r\n      this.selectRowId = affairid;\r\n      this.selectTaskId = id\r\n      // console.log(this.selectRowId)\r\n      // console.log(this.selectTaskId)\r\n    },\r\n\r\n    // 业务合表格行点击事件处理函数\r\n    handleView(row) {\r\n      // console.log(\"检测执行handleview\")\r\n      // console.log(row.ID)\r\n      this.curRowId = row.ID\r\n      this.getTaskList(row.ID)\r\n      this.getTaskStatistics()\r\n    },\r\n    // 选择文件夹按钮点击事件处理函数\r\n    handleSelectFolder() {\r\n      const fu = document.getElementById(\"open\");\r\n      if (fu == null) return;\r\n      this.textarea = fu.files[0].name;\r\n      // console.log(fu.files[0].name);\r\n    },\r\n\r\n    // 关闭添加/编辑业务合对话框前的钩子函数\r\n    handleCloseDialog(done) {\r\n      this.$confirm(\"确认关闭？\")\r\n        .then(() => {\r\n          this.selectRowId = null\r\n          this.selectTaskId = null\r\n          done();\r\n        })\r\n        .catch(() => { });\r\n    },\r\n\r\n    // 确定添加/编辑任务集合对话框按钮点击事件处理函数\r\n    addAffair() {\r\n      this.$refs.addAffairRef.validate(async (valid) => {\r\n        const token = sessionStorage.getItem('token')\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.post('affair/add', {\r\n          affairName: this.newAffair.affairName,\r\n          affairDesc: this.newAffair.affairDesc,\r\n          // userId: parseInt(sessionStorage.getItem('user_id'), 10)\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` // 在请求头中携带 token\r\n        }})\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.$refs.addAffairRef.resetFields()\r\n        this.dialogVisible = false\r\n        this.$message.success('添加成功')\r\n        this.getSetList()\r\n        this.getTaskStatistics()\r\n      })\r\n    },\r\n    //添加任务\r\n    addTask() {\r\n      // this.$refs.upload.submit();\r\n      this.$refs.newTaskRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        if (this.selectTaskId == null) {\r\n          const { data: res } = await this.$http.post('task/add', {\r\n            AffairId: this.selectRowId,\r\n            TaskName: this.newTask.taskName,\r\n            TaskPath: this.newTask.taskLocal,\r\n            TaskType: this.newTask.taskType,\r\n            TaskStatus: this.newTask.taskStatus,\r\n          })\r\n        if (res.status === 200) {\r\n          this.uploadTaskID = res.data.ID\r\n          console.log(\"上传任务ID为：\", this.uploadTaskID)\r\n          await this.$nextTick()\r\n          this.$refs.upload.submit()\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n          \r\n          // if (res.status != 200) return this.$message.error(res.message)\r\n          // this.$nextTick(() => {\r\n          //   if (this.$refs.newTaskRef) {\r\n          //     this.$refs.newTaskRef.resetFields();\r\n          //   }\r\n          // });\r\n          // this.$refs.upload.submit()\r\n          this.$refs.newTaskRef.resetFields();\r\n          this.dialogVisiblex = false\r\n          this.$message.success('添加成功')\r\n          // console.log(this.selectRowId)\r\n          this.getTaskList(this.selectRowId)\r\n          this.getTaskStatistics()\r\n        }\r\n        else {\r\n          const id = this.selectTaskId\r\n          this.selectTaskId = null\r\n          const { data: res } = await this.$http.put(`task/${id}`, {\r\n            AffairId: this.selectRowId,\r\n            TaskName: this.newTask.taskName,\r\n            // TaskPath: this.newTask.taskLocal,\r\n            TaskType: this.newTask.taskType,\r\n            TaskStatus: this.newTask.taskStatus,\r\n          })\r\n\r\n          console.log(\"修改任务\", this.$refs.upload.uploadFiles.length)\r\n          if (this.$refs.upload.uploadFiles.length === 1) {\r\n            this.uploadTaskID = id\r\n            console.log(\"bfdjsj上传任务ID为：\", this.uploadTaskID)\r\n            await this.$nextTick()\r\n            this.$refs.upload.submit()\r\n          }\r\n          // if (res.status != 200) return this.$message.error(res.message)\r\n          // this.$nextTick(() => {\r\n          //   if (this.$refs.newTaskRef) {\r\n\r\n          //   }\r\n          // });\r\n          this.$refs.newTaskRef.resetFields();\r\n          this.dialogVisiblex = false\r\n          this.$message.success('修改成功')\r\n          // console.log(this.selectRowId)\r\n          this.getTaskList(this.selectRowId)\r\n          this.getTaskStatistics()\r\n          this.selectRowId = null\r\n        }\r\n      })\r\n    },\r\n    async downloadResult(id) {\r\n      // window.location.href = `http://localhost:8000/api/download/${id}`\r\n     // 调用接口获取报告数据\r\n     const res = await this.$http.get(`/download/${id}`);\r\n\r\n    if (res.data.status !== 200) {\r\n      this.$message.error(res.data.message)\r\n    } else {\r\n    const taskResult = JSON.parse(res.data.taskResult)\r\n      // 使用获取到的数据动态生成 HTML 内容\r\n    const htmlContent = `\r\n    <html>\r\n      <head>\r\n        <title>${res.data.taskName}</title>\r\n      </head>\r\n    <body>\r\n      <h1>${res.data.taskType}</h1>\r\n      <p>${JSON.stringify(taskResult.DMLDetail)}</p>\r\n    </body>\r\n    </html>\r\n    `;\r\n\r\n    // 创建 blob 对象，并为其设置 MIME 类型为 'text/html'\r\n    const blob = new Blob([htmlContent], { type: 'text/html' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // 创建一个临时的 a 标签用于下载\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = 'report.html'; // 指定下载的文件名\r\n    document.body.appendChild(link); // 将 a 标签添加到页面中\r\n    link.click(); // 模拟点击 a 标签\r\n    document.body.removeChild(link); // 移除 a 标签\r\n    URL.revokeObjectURL(url); // 释放 URL 对象\r\n    }\r\n    },\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#search .el-input {\r\n  width: 200px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-dialog__wrapper {\r\n  z-index: 1000;\r\n}\r\n\r\n.el-table th:last-child .cell {\r\n  text-align: center;\r\n}\r\n\r\n.el-table-column--expand {\r\n  width: 50px !important;\r\n  text-align: center;\r\n}\r\n\r\n.el-button--danger {\r\n  background-color: #ff4d4f;\r\n  border-color: #ff4d4f;\r\n}\r\n\r\n.el-table__expand-icon {\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.el-form-item__label {\r\n  width: 80px;\r\n  text-align: right;\r\n  padding-right: 10px;\r\n}\r\n\r\n.el-button--small {\r\n  padding: 5px 12px;\r\n}\r\n\r\n.like {\r\n  cursor: pointer;\r\n  font-size: 25px;\r\n  display: inline-block;\r\n}\r\n\r\n.button-row {\r\n  display: flex;\r\n  // justify-content: space-around;;\r\n  margin-right: 5px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.upload-demo {\r\n  margin-top: 20px;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"}]}