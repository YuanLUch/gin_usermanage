{"remainingRequest":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\user\\userList.vue?vue&type=style&index=0&id=a1b2d2ba&scoped=true&lang=css","dependencies":[{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\src\\views\\user\\userList.vue","mtime":1708254458210},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\css-loader\\dist\\cjs.js","mtime":1702824124103},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1702824126490},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\postcss-loader\\src\\index.js","mtime":1702824125129},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702824123341},{"path":"D:\\GraduationProject\\NPU-DatabaseMigration\\vue-new\\node_modules\\vue-loader\\lib\\index.js","mtime":1702824125775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmhlYWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBiZWlnZTsNCiAgd2lkdGg6IDE0MzVweDsNCiAgaGVpZ2h0OiAxMDBweDsNCiAgbWFyZ2luOiAwIDUwcHg7DQogIGRpc3BsYXk6IHRhYmxlOw0KfQ0K"},{"version":3,"sources":["userList.vue"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userList.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"head\">\r\n      <span style=\"font-size: 30px;display:table-cell;text-align:center;vertical-align:middle\">\r\n        用户后台管理系统</span>\r\n    </div>\r\n    <el-card style=\"margin: 0 50px\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-input v-model=\"queryParam.username\" placeholder=\"输入用户名查找\" prefix-icon=\"el-icon-search\"\r\n            @change=\"searchUser\" />\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addUserVisible = true\">新增用户</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <template>\r\n        <el-table :data=\"userlist\" max-height=\"450\" style=\"width:100%\">\r\n          <el-table-column prop=\"ID\" label=\"ID\" width=\"100\" align=\"center\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"username\" label=\"用户名\" width=\"150\" align=\"left\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"role\" label=\"角色\" width=\"100\" align=\"left\">\r\n            <template slot-scope=\"scope\">\r\n              <span>\r\n                {{ scope.row.role == 1 ? '用户' : '管理员' }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"CreatedAt\" label=\"创建时间\" :formatter=\"formateDate\" width=\"250\" align=\"left\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"email\" label=\"邮箱\" width=\"210\" align=\"left\">\r\n          </el-table-column>\r\n\r\n          <el-table-column prop=\"phone_number\" label=\"电话号码\" width=\"200\" align=\"left\">\r\n          </el-table-column>\r\n\r\n          <el-table-column label=\"操作\" align=\"left\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button size=\"small\" type=\"primary\" @click=\"editUser(scope.row.ID)\">编辑</el-button>\r\n              <el-button size=\"small\" type=\"danger\" @click=\"deleteUser(scope.row.ID)\">删除</el-button>\r\n              <el-button size=\"small\" type=\"info\" @click=\"ChangePassword(scope.row.ID)\">修改密码</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <template>\r\n          <div class=\"block\">\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n              :current-page=\"pagination.currentPage\" :page-sizes=\"pagination.pageSizeOptions\"\r\n              :page-size=\"pagination.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"pagination.total\">\r\n            </el-pagination>\r\n          </div>\r\n\r\n        </template>\r\n      </template>\r\n    </el-card>\r\n\r\n    <!-- 新建用户弹窗 -->\r\n    <el-dialog title=\"新增用户\" :visible.sync=\"addUserVisible\" width=\"60%\" closable destroyOnClose>\r\n      <el-form :model=\"newUser\" :rules=\"addUserRules\" ref=\"addUserRef\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"newUser.username\" type=\"text\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"newUser.password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkpass\">\r\n          <el-input v-model=\"newUser.checkpass\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话号码\" prop=\"phoneNumber\">\r\n          <el-input v-model=\"newUser.phoneNumber\" type=\"text\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"newUser.email\" type=\"text\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"addUserOk\">确 定</el-button>\r\n        <el-button type=\"danger\" @click=\"addUserCancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑用户区域 -->\r\n    <el-dialog title=\"编辑用户\" :visible.sync=\"editUserVisible\" width=\"60%\" closable destroyOnClose>\r\n      <el-form :model=\"userInfo\" :rules=\"userRules\" ref=\"addUserRef\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"userInfo.username\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"电话号码\" prop=\"phone_number\">\r\n          <el-input v-model=\"userInfo.phone_number\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userInfo.email\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"是否为管理员\">\r\n          <el-switch v-model=\"IsAdmin\" active-text=\"是\" inactive-text=\"否\" @change=\"adminChange\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"editUserOk\">确 定</el-button>\r\n        <el-button type=\"danger\" @click=\"editUserCancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 修改密码 -->\r\n    <el-dialog title=\"修改密码\" :visible.sync=\"changePasswordVisible\" width=\"60%\" closable destroyOnClose>\r\n      <el-form :model=\"changePassword\" :rules=\"changePasswordRules\" ref=\"changePasswordRef\">\r\n        <el-form-item has-feedback label=\"新密码\" prop=\"password\">\r\n          <el-input v-model=\"changePassword.password\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item has-feedback label=\"确认密码\" prop=\"checkpass\">\r\n          <el-input v-model=\"changePassword.checkpass\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"changePasswordOk\">确 定</el-button>\r\n        <el-button type=\"danger\" @click=\"changePasswordCancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport day from 'dayjs'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSizeOptions: [5, 10, 20, 30, 40],\r\n        pageSize: 10,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showTotal: (total) => `共${total}条`,\r\n      },\r\n      userlist: [],\r\n      userInfo: {\r\n        username: '',\r\n        password: '',\r\n        role: 2,\r\n        checkPass: '',\r\n        phone_number: '',\r\n        email: ''\r\n      },\r\n      newUser: {\r\n        username: '',\r\n        password: '',\r\n        // role: 1,\r\n        checkPass: '',\r\n        phoneNumber: '',\r\n        email: ''\r\n      },\r\n      changePassword: {\r\n        id: 0,\r\n        password: '',\r\n        checkPass: '',\r\n      },\r\n      queryParam: {\r\n        // username: '',\r\n        pagesize: 10,\r\n        pagenum: 1,\r\n      },\r\n      editVisible: false,\r\n      userRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.userInfo.username == '') {\r\n                callback(new Error('请输入用户名'))\r\n              }\r\n              if ([...this.userInfo.username].length < 4 || [...this.userInfo.username].length > 12) {\r\n                callback(new Error('用户名应当在4到12个字符之间'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.userInfo.password == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if ([...this.userInfo.password].length < 6 || [...this.userInfo.password].length > 20) {\r\n                callback(new Error('密码应当在6到20位之间'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        checkpass: [\r\n          { required: true, message: '请重复密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.userInfo.checkpass == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if (this.userInfo.password !== this.userInfo.checkpass) {\r\n                callback(new Error('密码不一致，请重新输入'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        phone_number: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3|5|7|8|9]\\d{9}$/, message: '请输入正确的号码格式', trigger: 'blur' }\r\n        ],\r\n\r\n        email: [{\r\n          required: true,//是否必填\r\n          message: '请输入邮箱地址',      //错误提示信息\r\n          trigger: 'blur'              //检验方式（blur为鼠标点击其他地方，）\r\n        },\r\n        {\r\n          type: 'email',                       //要检验的类型（number，email，date等）\r\n          message: '请输入正确的邮箱地址',\r\n          // trigger: ['blur', 'change']（change为检验的字符变化的时候）\r\n          trigger: 'blur'\r\n        }\r\n        ],\r\n      },\r\n      addUserRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.newUser.username == '') {\r\n                callback(new Error('请输入用户名'))\r\n              }\r\n              if ([...this.newUser.username].length < 4 || [...this.newUser.username].length > 12) {\r\n                callback(new Error('用户名应当在4到12个字符之间'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.newUser.password == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if ([...this.newUser.password].length < 6 || [...this.newUser.password].length > 20) {\r\n                callback(new Error('密码应当在6到20位之间'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        checkpass: [\r\n          { required: true, message: '请重复密码', trigger: 'blur' },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.newUser.checkpass == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if (this.newUser.password !== this.newUser.checkpass) {\r\n                callback(new Error('密码不一致，请重新输入'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        phoneNumber: [\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { pattern: /^1[3|5|7|8|9]\\d{9}$/, message: '请输入正确的号码格式', trigger: 'blur' }\r\n        ],\r\n\r\n        email: [\r\n          {\r\n            required: true,//是否必填\r\n            message: '请输入邮箱地址',      //错误提示信息\r\n            trigger: 'blur'              //检验方式（blur为鼠标点击其他地方，）\r\n          },\r\n          {\r\n            type: 'email',                       //要检验的类型（number，email，date等）\r\n            message: '请输入正确的邮箱地址',\r\n            // trigger: ['blur', 'change']（change为检验的字符变化的时候）\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n      },\r\n      changePasswordRules: {\r\n        password: [\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.changePassword.password == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if ([...this.changePassword.password].length < 6 || [...this.changePassword.password].length > 20) {\r\n                callback(new Error('密码应当在6到20位之间'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n        checkpass: [\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.changePassword.checkpass == '') {\r\n                callback(new Error('请输入密码'))\r\n              }\r\n              if (this.changePassword.password !== this.changePassword.checkpass) {\r\n                callback(new Error('密码不一致，请重新输入'))\r\n              } else {\r\n                callback()\r\n              }\r\n            },\r\n            trigger: 'blur',\r\n          },\r\n        ],\r\n      },\r\n      editUserVisible: false,\r\n      addUserVisible: false,\r\n      changePasswordVisible: false,\r\n    }\r\n  },\r\n  created() {\r\n    // console.log(\"测试获取用户列表\")\r\n    this.getUserList()\r\n    // console.log(\"已经执行created()\")\r\n  },\r\n  computed: {\r\n    IsAdmin: {\r\n      get() {\r\n        if (this.userInfo.role === 2) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      },\r\n      set() {\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    // 获取用户列表\r\n    async getUserList() {\r\n      const { data: res } = await this.$http.get('users', {\r\n        params: {\r\n          // username: this.queryParam.username,\r\n          page_size: this.queryParam.pagesize,\r\n          page_num: this.queryParam.pagenum,\r\n        },\r\n      })\r\n      if (res.status !== 200) {\r\n        if (res.status === 1004 || 1005 || 1006 || 1007) {\r\n          window.sessionStorage.clear()\r\n          this.$router.push('/login')\r\n        }\r\n        this.$message.error(res.message)\r\n      }\r\n\r\n      // console.log(res.data)\r\n      this.userlist = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 搜索用户\r\n    async searchUser() {\r\n      // console.log(\"进入用户搜索函数\")\r\n      this.queryParam.pagenum = 1\r\n      this.pagination.currentPage = 1\r\n      this.queryParam.pagesize = this.pagination.pageSize\r\n      // console.log(\"当前页面数据条数：\", this.pagination.pageSize)\r\n      const { data: res } = await this.$http.get('user/search', {\r\n        params: {\r\n          page_size: this.queryParam.pagesize,\r\n          page_num: this.queryParam.pagenum,\r\n          username: this.queryParam.username,\r\n        },\r\n      })\r\n\r\n      // console.log(\"已经得到后端返回的数据：\", res)\r\n      if (res.status !== 200) return this.$message.error(res.message)\r\n      this.userlist = res.data\r\n      this.pagination.total = res.total\r\n    },\r\n\r\n    // 修改日期格式\r\n    formateDate(row, column) {\r\n      let data = row[column.property]\r\n      // 方式一\r\n      return data ? day(data).format('YYYY年MM月DD日 HH:mm') : '暂无'\r\n\r\n      // 方式二：网上教程\r\n      // if(data == null) {\r\n      //   return null;\r\n      // }\r\n      // let dt = new Date(data)\r\n      // console.log(\"dt\",dt)\r\n      // return dt.getFullYear() + '-' + (dt.getMonth() + 1) + '-' + dt.getDate() + ' ' + dt.getHours() + ':' + dt.getMinutes() + ':' + dt.getSeconds()\r\n    },\r\n\r\n    // 更改分页\r\n    handleSizeChange(val) {\r\n      this.pagination.pageSize = val\r\n      // console.log(`每页 ${val} 条, pagesize`, this.pagination.pageSize);\r\n      this.queryParam.pagesize = this.pagination.pageSize\r\n      this.getUserList()\r\n\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pagination.currentPage = val\r\n      // console.log(`当前页: ${val}`, this.pagination.currentPage);\r\n      this.queryParam.pagenum = this.pagination.currentPage\r\n      this.getUserList()\r\n    },\r\n\r\n    // 删除用户\r\n    deleteUser(id) {\r\n      // console.log(id)\r\n      this.$confirm('提示：请再次确认', '确定要删除该用户吗？一旦删除，无法恢复', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      })\r\n        .then(async () => {\r\n          try {\r\n            const response = await this.$http.delete(`user/${id}`)\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n              this.$message.success('删除成功')\r\n              this.getUserList() // 删除成功后刷新用户列表\r\n            } else {\r\n              this.$message.error(response.data.message || '删除失败，请重试')\r\n            }\r\n          } catch (error) {\r\n            this.$message.error('删除失败，请重试')\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.info('已取消删除')\r\n        });\r\n    },\r\n\r\n    // 新增用户\r\n    addUserOk() {\r\n      this.$refs.addUserRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.post('user/add', {\r\n          username: this.newUser.username,\r\n          password: this.newUser.password,\r\n          phone_number: this.newUser.phoneNumber,\r\n          email: this.newUser.email\r\n          // role: this.newUser.role,\r\n        })\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.$refs.addUserRef.resetFields()\r\n        this.addUserVisible = false\r\n        this.$message.success('添加用户成功')\r\n        this.getUserList()\r\n      })\r\n    },\r\n    addUserCancel() {\r\n      this.$refs.addUserRef.resetFields()\r\n      this.addUserVisible = false\r\n      this.$message.info('新增用户已取消')\r\n    },\r\n    adminChange(checked) {\r\n      if (checked) {\r\n        this.userInfo.role = 2\r\n      } else {\r\n        this.userInfo.role = 1\r\n      }\r\n    },\r\n\r\n    // 编辑用户\r\n    async editUser(id) {\r\n      this.editUserVisible = true\r\n      // console.log(\"==========>\", id)\r\n      const { data: res } = await this.$http.get(`user/${id}`)\r\n      this.userInfo = res.data\r\n      this.userInfo.id = id\r\n    },\r\n    editUserOk() {\r\n      this.$refs.addUserRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.put(`user/${this.userInfo.id}`, {\r\n          username: this.userInfo.username,\r\n          password: this.userInfo.password,\r\n          phone_number: this.userInfo.phone_number,\r\n          email: this.userInfo.email,\r\n          role: this.userInfo.role,\r\n        })\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.editUserVisible = false\r\n        this.$message.success('更新用户信息成功')\r\n        this.getUserList()\r\n      })\r\n    },\r\n    editUserCancel() {\r\n      this.$refs.addUserRef.resetFields()\r\n      this.editUserVisible = false\r\n      this.$message.info('编辑已取消')\r\n    },\r\n\r\n    // 修改密码\r\n    async ChangePassword(id) {\r\n      this.changePasswordVisible = true\r\n      const { data: res } = await this.$http.get(`user/${id}`)\r\n      // console.log(res)\r\n      this.changePassword.id = id\r\n    },\r\n    changePasswordOk() {\r\n      this.$refs.changePasswordRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error('参数不符合要求，请重新输入')\r\n        const { data: res } = await this.$http.put(`user/changepw/${this.changePassword.id}`, {\r\n          password: this.changePassword.password,\r\n        })\r\n        // console.log(\"修改密码后的res:\", res)\r\n        if (res.status != 200) return this.$message.error(res.message)\r\n        this.changePasswordVisible = false\r\n        this.$message.success('修改密码成功')\r\n        this.getUserList()\r\n      })\r\n    },\r\n    changePasswordCancel() {\r\n      this.$refs.changePasswordRef.resetFields()\r\n      this.changePasswordVisible = false\r\n      this.$message.info('已取消')\r\n    },\r\n  },\r\n}\r\n</script>\r\n  \r\n<style scoped>\r\n.head {\r\n  background-color: beige;\r\n  width: 1435px;\r\n  height: 100px;\r\n  margin: 0 50px;\r\n  display: table;\r\n}\r\n</style>"]}]}